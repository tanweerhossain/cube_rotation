// Generated by psc-bundle 0.11.6
var PS = {};
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Control_Category = PS["Control.Category"];
  var flip = function (f) {
      return function (b) {
          return function (a) {
              return f(a)(b);
          };
      };
  };
  exports["flip"] = flip;
})(PS["Data.Function"] = PS["Data.Function"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Data.Functor"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Function = PS["Data.Function"];
  var Data_Unit = PS["Data.Unit"];        
  var Functor = function (map) {
      this.map = map;
  };
  var map = function (dict) {
      return dict.map;
  };
  exports["Functor"] = Functor;
  exports["map"] = map;
})(PS["Data.Functor"] = PS["Data.Functor"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Control.Apply"];
  var Control_Category = PS["Control.Category"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];        
  var Apply = function (Functor0, apply) {
      this.Functor0 = Functor0;
      this.apply = apply;
  };                      
  var apply = function (dict) {
      return dict.apply;
  };
  exports["Apply"] = Apply;
  exports["apply"] = apply;
})(PS["Control.Apply"] = PS["Control.Apply"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Control_Apply = PS["Control.Apply"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];        
  var Applicative = function (Apply0, pure) {
      this.Apply0 = Apply0;
      this.pure = pure;
  };
  var pure = function (dict) {
      return dict.pure;
  };
  var liftA1 = function (dictApplicative) {
      return function (f) {
          return function (a) {
              return Control_Apply.apply(dictApplicative.Apply0())(pure(dictApplicative)(f))(a);
          };
      };
  };
  exports["Applicative"] = Applicative;
  exports["liftA1"] = liftA1;
  exports["pure"] = pure;
})(PS["Control.Applicative"] = PS["Control.Applicative"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Control.Bind"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Category = PS["Control.Category"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];        
  var Bind = function (Apply0, bind) {
      this.Apply0 = Apply0;
      this.bind = bind;
  };                     
  var bind = function (dict) {
      return dict.bind;
  };
  exports["Bind"] = Bind;
  exports["bind"] = bind;
})(PS["Control.Bind"] = PS["Control.Bind"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];        
  var Monad = function (Applicative0, Bind1) {
      this.Applicative0 = Applicative0;
      this.Bind1 = Bind1;
  };
  var ap = function (dictMonad) {
      return function (f) {
          return function (a) {
              return Control_Bind.bind(dictMonad.Bind1())(f)(function (v) {
                  return Control_Bind.bind(dictMonad.Bind1())(a)(function (v1) {
                      return Control_Applicative.pure(dictMonad.Applicative0())(v(v1));
                  });
              });
          };
      };
  };
  exports["Monad"] = Monad;
  exports["ap"] = ap;
})(PS["Control.Monad"] = PS["Control.Monad"] || {});
(function(exports) {
    "use strict";

  exports.pureE = function (a) {
    return function () {
      return a;
    };
  };

  exports.bindE = function (a) {
    return function (f) {
      return function () {
        return f(a())();
      };
    };
  };
})(PS["Control.Monad.Eff"] = PS["Control.Monad.Eff"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Control.Monad.Eff"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];        
  var monadEff = new Control_Monad.Monad(function () {
      return applicativeEff;
  }, function () {
      return bindEff;
  });
  var bindEff = new Control_Bind.Bind(function () {
      return applyEff;
  }, $foreign.bindE);
  var applyEff = new Control_Apply.Apply(function () {
      return functorEff;
  }, Control_Monad.ap(monadEff));
  var applicativeEff = new Control_Applicative.Applicative(function () {
      return applyEff;
  }, $foreign.pureE);
  var functorEff = new Data_Functor.Functor(Control_Applicative.liftA1(applicativeEff));
  exports["functorEff"] = functorEff;
  exports["applyEff"] = applyEff;
  exports["applicativeEff"] = applicativeEff;
  exports["bindEff"] = bindEff;
  exports["monadEff"] = monadEff;
})(PS["Control.Monad.Eff"] = PS["Control.Monad.Eff"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Data.Semigroup"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Void = PS["Data.Void"];                         
  var append = function (dict) {
      return dict.append;
  };
  exports["append"] = append;
})(PS["Data.Semigroup"] = PS["Data.Semigroup"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Eq = PS["Data.Eq"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var Data_Function = PS["Data.Function"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];
  var mempty = function (dict) {
      return dict.mempty;
  };
  exports["mempty"] = mempty;
})(PS["Data.Monoid"] = PS["Data.Monoid"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Data.Show"];     
  var Show = function (show) {
      this.show = show;
  }; 
  var show = function (dict) {
      return dict.show;
  };
  exports["Show"] = Show;
  exports["show"] = show;
})(PS["Data.Show"] = PS["Data.Show"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Monad = PS["Control.Monad"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];        
  var Nothing = (function () {
      function Nothing() {

      };
      Nothing.value = new Nothing();
      return Nothing;
  })();
  var Just = (function () {
      function Just(value0) {
          this.value0 = value0;
      };
      Just.create = function (value0) {
          return new Just(value0);
      };
      return Just;
  })();
  var maybe = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Nothing) {
                  return v;
              };
              if (v2 instanceof Just) {
                  return v1(v2.value0);
              };
              throw new Error("Failed pattern match at Data.Maybe line 219, column 1 - line 219, column 51: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  };
  exports["Nothing"] = Nothing;
  exports["Just"] = Just;
  exports["maybe"] = maybe;
})(PS["Data.Maybe"] = PS["Data.Maybe"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Data.Foldable"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Plus = PS["Control.Plus"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Maybe_Last = PS["Data.Maybe.Last"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Monoid_Additive = PS["Data.Monoid.Additive"];
  var Data_Monoid_Conj = PS["Data.Monoid.Conj"];
  var Data_Monoid_Disj = PS["Data.Monoid.Disj"];
  var Data_Monoid_Dual = PS["Data.Monoid.Dual"];
  var Data_Monoid_Endo = PS["Data.Monoid.Endo"];
  var Data_Monoid_Multiplicative = PS["Data.Monoid.Multiplicative"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];        
  var Foldable = function (foldMap, foldl, foldr) {
      this.foldMap = foldMap;
      this.foldl = foldl;
      this.foldr = foldr;
  };
  var foldr = function (dict) {
      return dict.foldr;
  };
  var foldl = function (dict) {
      return dict.foldl;
  };
  var foldMap = function (dict) {
      return dict.foldMap;
  };
  exports["Foldable"] = Foldable;
  exports["foldMap"] = foldMap;
  exports["foldl"] = foldl;
  exports["foldr"] = foldr;
})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});
(function(exports) {
    "use strict";

  exports.toNumber = function (n) {
    return n;
  };
})(PS["Data.Int"] = PS["Data.Int"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Data.Int"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Eq = PS["Data.Eq"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Int_Bits = PS["Data.Int.Bits"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Show = PS["Data.Show"];
  var Global = PS["Global"];
  var $$Math = PS["Math"];
  var Prelude = PS["Prelude"];
  exports["toNumber"] = $foreign.toNumber;
})(PS["Data.Int"] = PS["Data.Int"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Monad = PS["Control.Monad"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Plus = PS["Control.Plus"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semigroup_Foldable = PS["Data.Semigroup.Foldable"];
  var Data_Semigroup_Traversable = PS["Data.Semigroup.Traversable"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Prelude = PS["Prelude"];        
  var Nil = (function () {
      function Nil() {

      };
      Nil.value = new Nil();
      return Nil;
  })();
  var Cons = (function () {
      function Cons(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Cons.create = function (value0) {
          return function (value1) {
              return new Cons(value0, value1);
          };
      };
      return Cons;
  })();
  var foldableList = new Data_Foldable.Foldable(function (dictMonoid) {
      return function (f) {
          return Data_Foldable.foldl(foldableList)(function (acc) {
              return function ($143) {
                  return Data_Semigroup.append(dictMonoid.Semigroup0())(acc)(f($143));
              };
          })(Data_Monoid.mempty(dictMonoid));
      };
  }, function (f) {
      var go = function ($copy_b) {
          return function ($copy_v) {
              var $tco_var_b = $copy_b;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(b, v) {
                  if (v instanceof Nil) {
                      $tco_done = true;
                      return b;
                  };
                  if (v instanceof Cons) {
                      $tco_var_b = f(b)(v.value0);
                      $copy_v = v.value1;
                      return;
                  };
                  throw new Error("Failed pattern match at Data.List.Types line 78, column 12 - line 80, column 30: " + [ v.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_b, $copy_v);
              };
              return $tco_result;
          };
      };
      return go;
  }, function (f) {
      return function (b) {
          var rev = function ($copy_acc) {
              return function ($copy_v) {
                  var $tco_var_acc = $copy_acc;
                  var $tco_done = false;
                  var $tco_result;
                  function $tco_loop(acc, v) {
                      if (v instanceof Nil) {
                          $tco_done = true;
                          return acc;
                      };
                      if (v instanceof Cons) {
                          $tco_var_acc = new Cons(v.value0, acc);
                          $copy_v = v.value1;
                          return;
                      };
                      throw new Error("Failed pattern match at Data.List.Types line 73, column 15 - line 75, column 33: " + [ v.constructor.name ]);
                  };
                  while (!$tco_done) {
                      $tco_result = $tco_loop($tco_var_acc, $copy_v);
                  };
                  return $tco_result;
              };
          };
          return function ($144) {
              return Data_Foldable.foldl(foldableList)(Data_Function.flip(f))(b)(rev(Nil.value)($144));
          };
      };
  });                                                                     
  var functorList = new Data_Functor.Functor(function (f) {
      return Data_Foldable.foldr(foldableList)(function (x) {
          return function (acc) {
              return new Cons(f(x), acc);
          };
      })(Nil.value);
  });
  exports["Nil"] = Nil;
  exports["Cons"] = Cons;
  exports["functorList"] = functorList;
  exports["foldableList"] = foldableList;
})(PS["Data.List.Types"] = PS["Data.List.Types"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];
  var $$null = function (v) {
      if (v instanceof Data_List_Types.Nil) {
          return true;
      };
      return false;
  };
  exports["null"] = $$null;
})(PS["Data.List"] = PS["Data.List"] || {});
(function(exports) {
    "use strict";

  exports["null"] = null;

  exports.notNull = function (x) {
    return x;
  };
})(PS["Data.Nullable"] = PS["Data.Nullable"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Data.Nullable"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Show = PS["Data.Show"];
  var Prelude = PS["Prelude"];        
  var toNullable = Data_Maybe.maybe($foreign["null"])($foreign.notNull);
  exports["toNullable"] = toNullable;
})(PS["Data.Nullable"] = PS["Data.Nullable"] || {});
(function(exports) {
    "use strict";

  var Types = MathBox.Primitives.Types.Types;

  exports.jsMkMat4 = function (value) {
      return [
          value.value0, value.value1, value.value2, value.value3,
          value.value4, value.value5, value.value6, value.value7,
          value.value8, value.value9, value.value10, value.value11,
          value.value12, value.value13, value.value14, value.value15
      ];
  };

  exports.jsMkClasses = function (stringArr) {
      return Types.classes(stringArr).make();
  };

  exports.jsMkFont = function (stringArr) {
      return Types.font(stringArr).make();
  };

  exports.jsMkSelect = function (value) {
      return Types.select(value[0]).make();
  };

  exports.jsMkRound = function (value) {
      return Types.round(value).make();
  };

  exports.jsMkTimestamp = function (value) {
      return Types.timestamp(value).make();
  };

  exports.jsMkTranspose = function (order) {
      return Types.transpose(order).make();
  };

  exports.jsMkSwizzle = function (order) {
      return function (size) {
          return Types.swizzle(order, size).make();
      };
  };

  exports.jsMkAxis = function (value) {
      return function (allowZero) {
          return Types.axis(value, allowZero).make();
      };
  };

  exports.jsMkStringColor = function (string) {
      return new THREE.Color(string);
  };

  exports.jsMkRgbColor = function (r) {
      return function (g) {
          return function (b) {
              return Types.color(r, g, b).make();
          }
      }
  };

  exports.jsMkBlending = function (value) {
      return Types.blending(value).make();
  };

  exports.jsMkFilter = function (value) {
      return Types.filter(value).make();
  };

  exports.jsMkType = function (value) {
      return Types.type(value).make();
  };

  exports.jsMkScale = function (value) {
      return Types.scale(value).make();
  };

  exports.jsMkMapping = function (value) {
      return Types.mapping(value).make();
  };

  exports.jsMkJoin = function (value) {
      return Types.join(value).make();
  };

  exports.jsMkShape = function (value) {
      return Types.shape(value).make();
  };

  exports.jsMkStroke = function (value) {
      return Types.stroke(value).make();
  };

  exports.jsMkVertexPass = function (value) {
      return Types.vertexPass(value).make();
  };

  exports.jsMkFragmentPass = function (value) {
      return Types.fragmentPass(value).make();
  };

  exports.jsMkEase = function (value) {
      return Types.ease(value).make();
  };

  exports.jsMkFit = function (value) {
      return Types.fit(value).make();
  };

  exports.jsMkAnchor = function (value) {
      return Types.anchor(value).make();
  };
})(PS["Mathbox.Types"] = PS["Mathbox.Types"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Mathbox.Types"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Int = PS["Data.Int"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Data_Show = PS["Data.Show"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Tuple_Nested = PS["Data.Tuple.Nested"];
  var Global = PS["Global"];
  var Prelude = PS["Prelude"];        
  var VertexPassData = (function () {
      function VertexPassData() {

      };
      VertexPassData.value = new VertexPassData();
      return VertexPassData;
  })();
  var VertexPassView = (function () {
      function VertexPassView() {

      };
      VertexPassView.value = new VertexPassView();
      return VertexPassView;
  })();
  var VertexPassWorld = (function () {
      function VertexPassWorld() {

      };
      VertexPassWorld.value = new VertexPassWorld();
      return VertexPassWorld;
  })();
  var VertexPassEye = (function () {
      function VertexPassEye() {

      };
      VertexPassEye.value = new VertexPassEye();
      return VertexPassEye;
  })();
  var TypeFloat = (function () {
      function TypeFloat() {

      };
      TypeFloat.value = new TypeFloat();
      return TypeFloat;
  })();
  var TypeShort = (function () {
      function TypeShort() {

      };
      TypeShort.value = new TypeShort();
      return TypeShort;
  })();
  var TypeUnsignedInt = (function () {
      function TypeUnsignedInt() {

      };
      TypeUnsignedInt.value = new TypeUnsignedInt();
      return TypeUnsignedInt;
  })();
  var TypeUnsignedShort = (function () {
      function TypeUnsignedShort() {

      };
      TypeUnsignedShort.value = new TypeUnsignedShort();
      return TypeUnsignedShort;
  })();
  var TypeInt = (function () {
      function TypeInt() {

      };
      TypeInt.value = new TypeInt();
      return TypeInt;
  })();
  var TypeUnsignedByte = (function () {
      function TypeUnsignedByte() {

      };
      TypeUnsignedByte.value = new TypeUnsignedByte();
      return TypeUnsignedByte;
  })();
  var TypeByte = (function () {
      function TypeByte() {

      };
      TypeByte.value = new TypeByte();
      return TypeByte;
  })();
  var Swizzle = (function () {
      function Swizzle(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Swizzle.create = function (value0) {
          return function (value1) {
              return new Swizzle(value0, value1);
          };
      };
      return Swizzle;
  })();
  var StrokeSolid = (function () {
      function StrokeSolid() {

      };
      StrokeSolid.value = new StrokeSolid();
      return StrokeSolid;
  })();
  var StrokeDotted = (function () {
      function StrokeDotted() {

      };
      StrokeDotted.value = new StrokeDotted();
      return StrokeDotted;
  })();
  var StrokeDashed = (function () {
      function StrokeDashed() {

      };
      StrokeDashed.value = new StrokeDashed();
      return StrokeDashed;
  })();
  var ShapeCircle = (function () {
      function ShapeCircle() {

      };
      ShapeCircle.value = new ShapeCircle();
      return ShapeCircle;
  })();
  var ShapeSquare = (function () {
      function ShapeSquare() {

      };
      ShapeSquare.value = new ShapeSquare();
      return ShapeSquare;
  })();
  var ShapeDiamond = (function () {
      function ShapeDiamond() {

      };
      ShapeDiamond.value = new ShapeDiamond();
      return ShapeDiamond;
  })();
  var ShapeUp = (function () {
      function ShapeUp() {

      };
      ShapeUp.value = new ShapeUp();
      return ShapeUp;
  })();
  var ShapeDown = (function () {
      function ShapeDown() {

      };
      ShapeDown.value = new ShapeDown();
      return ShapeDown;
  })();
  var ShapeLeft = (function () {
      function ShapeLeft() {

      };
      ShapeLeft.value = new ShapeLeft();
      return ShapeLeft;
  })();
  var ShapeRight = (function () {
      function ShapeRight() {

      };
      ShapeRight.value = new ShapeRight();
      return ShapeRight;
  })();
  var ScaleLinear = (function () {
      function ScaleLinear() {

      };
      ScaleLinear.value = new ScaleLinear();
      return ScaleLinear;
  })();
  var ScaleLog = (function () {
      function ScaleLog() {

      };
      ScaleLog.value = new ScaleLog();
      return ScaleLog;
  })();
  var Round = (function () {
      function Round(value0) {
          this.value0 = value0;
      };
      Round.create = function (value0) {
          return new Round(value0);
      };
      return Round;
  })();
  var MappingRelative = (function () {
      function MappingRelative() {

      };
      MappingRelative.value = new MappingRelative();
      return MappingRelative;
  })();
  var MappingAbsolute = (function () {
      function MappingAbsolute() {

      };
      MappingAbsolute.value = new MappingAbsolute();
      return MappingAbsolute;
  })();
  var JoinMiter = (function () {
      function JoinMiter() {

      };
      JoinMiter.value = new JoinMiter();
      return JoinMiter;
  })();
  var JoinRound = (function () {
      function JoinRound() {

      };
      JoinRound.value = new JoinRound();
      return JoinRound;
  })();
  var JoinBevel = (function () {
      function JoinBevel() {

      };
      JoinBevel.value = new JoinBevel();
      return JoinBevel;
  })();
  var FragmentPassColor = (function () {
      function FragmentPassColor() {

      };
      FragmentPassColor.value = new FragmentPassColor();
      return FragmentPassColor;
  })();
  var FragmentPassLight = (function () {
      function FragmentPassLight() {

      };
      FragmentPassLight.value = new FragmentPassLight();
      return FragmentPassLight;
  })();
  var FragmentPassRgba = (function () {
      function FragmentPassRgba() {

      };
      FragmentPassRgba.value = new FragmentPassRgba();
      return FragmentPassRgba;
  })();
  var FitX = (function () {
      function FitX() {

      };
      FitX.value = new FitX();
      return FitX;
  })();
  var FitY = (function () {
      function FitY() {

      };
      FitY.value = new FitY();
      return FitY;
  })();
  var FitContain = (function () {
      function FitContain() {

      };
      FitContain.value = new FitContain();
      return FitContain;
  })();
  var FitCover = (function () {
      function FitCover() {

      };
      FitCover.value = new FitCover();
      return FitCover;
  })();
  var FilterNearest = (function () {
      function FilterNearest() {

      };
      FilterNearest.value = new FilterNearest();
      return FilterNearest;
  })();
  var FilterLinearMipmapLinear = (function () {
      function FilterLinearMipmapLinear() {

      };
      FilterLinearMipmapLinear.value = new FilterLinearMipmapLinear();
      return FilterLinearMipmapLinear;
  })();
  var FilterLinearMipMapNearest = (function () {
      function FilterLinearMipMapNearest() {

      };
      FilterLinearMipMapNearest.value = new FilterLinearMipMapNearest();
      return FilterLinearMipMapNearest;
  })();
  var FilterNearestMipMapLinear = (function () {
      function FilterNearestMipMapLinear() {

      };
      FilterNearestMipMapLinear.value = new FilterNearestMipMapLinear();
      return FilterNearestMipMapLinear;
  })();
  var FilterLinear = (function () {
      function FilterLinear() {

      };
      FilterLinear.value = new FilterLinear();
      return FilterLinear;
  })();
  var FilterNearestMipMapNearest = (function () {
      function FilterNearestMipMapNearest() {

      };
      FilterNearestMipMapNearest.value = new FilterNearestMipMapNearest();
      return FilterNearestMipMapNearest;
  })();
  var EaseLinear = (function () {
      function EaseLinear() {

      };
      EaseLinear.value = new EaseLinear();
      return EaseLinear;
  })();
  var EaseCosine = (function () {
      function EaseCosine() {

      };
      EaseCosine.value = new EaseCosine();
      return EaseCosine;
  })();
  var RgbColor = (function () {
      function RgbColor(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      RgbColor.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new RgbColor(value0, value1, value2);
              };
          };
      };
      return RgbColor;
  })();
  var StringColor = (function () {
      function StringColor(value0) {
          this.value0 = value0;
      };
      StringColor.create = function (value0) {
          return new StringColor(value0);
      };
      return StringColor;
  })();
  var Classes = (function () {
      function Classes(value0) {
          this.value0 = value0;
      };
      Classes.create = function (value0) {
          return new Classes(value0);
      };
      return Classes;
  })();
  var BlendingNo = (function () {
      function BlendingNo() {

      };
      BlendingNo.value = new BlendingNo();
      return BlendingNo;
  })();
  var BlendingNormal = (function () {
      function BlendingNormal() {

      };
      BlendingNormal.value = new BlendingNormal();
      return BlendingNormal;
  })();
  var BlendingAdd = (function () {
      function BlendingAdd() {

      };
      BlendingAdd.value = new BlendingAdd();
      return BlendingAdd;
  })();
  var BlendingSubstract = (function () {
      function BlendingSubstract() {

      };
      BlendingSubstract.value = new BlendingSubstract();
      return BlendingSubstract;
  })();
  var BlendingMultiply = (function () {
      function BlendingMultiply() {

      };
      BlendingMultiply.value = new BlendingMultiply();
      return BlendingMultiply;
  })();
  var BlendingCustom = (function () {
      function BlendingCustom() {

      };
      BlendingCustom.value = new BlendingCustom();
      return BlendingCustom;
  })();
  var Axis0 = (function () {
      function Axis0() {

      };
      Axis0.value = new Axis0();
      return Axis0;
  })();
  var AxisX = (function () {
      function AxisX() {

      };
      AxisX.value = new AxisX();
      return AxisX;
  })();
  var AxisY = (function () {
      function AxisY() {

      };
      AxisY.value = new AxisY();
      return AxisY;
  })();
  var AxisZ = (function () {
      function AxisZ() {

      };
      AxisZ.value = new AxisZ();
      return AxisZ;
  })();
  var AxisW = (function () {
      function AxisW() {

      };
      AxisW.value = new AxisW();
      return AxisW;
  })();
  var AnchorFirst = (function () {
      function AnchorFirst() {

      };
      AnchorFirst.value = new AnchorFirst();
      return AnchorFirst;
  })();
  var AnchorMiddle = (function () {
      function AnchorMiddle() {

      };
      AnchorMiddle.value = new AnchorMiddle();
      return AnchorMiddle;
  })();
  var AnchorLast = (function () {
      function AnchorLast() {

      };
      AnchorLast.value = new AnchorLast();
      return AnchorLast;
  })();
  var xyz = [ 1, 2, 3 ];
  var transposeToJs = function (c) {
      return $foreign.jsMkTranspose;
  };
  var timestampToJs = function (t) {
      return $foreign.jsMkTimestamp;
  };
  var swizzleToJs = function (v) {
      return $foreign.jsMkSwizzle(Data_Nullable.toNullable(v.value0))(Data_Nullable.toNullable(v.value1));
  };
  var showVertexPass = new Data_Show.Show(function (v) {
      if (v instanceof VertexPassData) {
          return "data";
      };
      if (v instanceof VertexPassView) {
          return "view";
      };
      if (v instanceof VertexPassWorld) {
          return "world";
      };
      if (v instanceof VertexPassEye) {
          return "eye";
      };
      throw new Error("Failed pattern match at Mathbox.Types line 416, column 1 - line 416, column 43: " + [ v.constructor.name ]);
  });
  var vertexPassToJs = function (e) {
      return $foreign.jsMkVertexPass(Data_Show.show(showVertexPass)(e));
  };
  var showType = new Data_Show.Show(function (v) {
      if (v instanceof TypeFloat) {
          return "float";
      };
      if (v instanceof TypeShort) {
          return "short";
      };
      if (v instanceof TypeUnsignedInt) {
          return "unsignedInt";
      };
      if (v instanceof TypeUnsignedShort) {
          return "unsignedShort";
      };
      if (v instanceof TypeInt) {
          return "int";
      };
      if (v instanceof TypeUnsignedByte) {
          return "unsignedByte";
      };
      if (v instanceof TypeByte) {
          return "byte";
      };
      throw new Error("Failed pattern match at Mathbox.Types line 299, column 1 - line 299, column 31: " + [ v.constructor.name ]);
  });
  var typeToJs = function (e) {
      return $foreign.jsMkType(Data_Show.show(showType)(e));
  };
  var showStroke = new Data_Show.Show(function (v) {
      if (v instanceof StrokeSolid) {
          return "solid";
      };
      if (v instanceof StrokeDotted) {
          return "dotted";
      };
      if (v instanceof StrokeDashed) {
          return "dashed";
      };
      throw new Error("Failed pattern match at Mathbox.Types line 400, column 1 - line 400, column 35: " + [ v.constructor.name ]);
  });
  var strokeToJs = function (e) {
      return $foreign.jsMkStroke(Data_Show.show(showStroke)(e));
  };
  var showShape = new Data_Show.Show(function (v) {
      if (v instanceof ShapeCircle) {
          return "circle";
      };
      if (v instanceof ShapeSquare) {
          return "square";
      };
      if (v instanceof ShapeDiamond) {
          return "diamond";
      };
      if (v instanceof ShapeUp) {
          return "up";
      };
      if (v instanceof ShapeDown) {
          return "down";
      };
      if (v instanceof ShapeLeft) {
          return "left";
      };
      if (v instanceof ShapeRight) {
          return "right";
      };
      throw new Error("Failed pattern match at Mathbox.Types line 380, column 1 - line 380, column 33: " + [ v.constructor.name ]);
  });
  var showScale = new Data_Show.Show(function (v) {
      if (v instanceof ScaleLinear) {
          return "linear";
      };
      if (v instanceof ScaleLog) {
          return "log";
      };
      throw new Error("Failed pattern match at Mathbox.Types line 319, column 1 - line 319, column 33: " + [ v.constructor.name ]);
  });
  var showMapping = new Data_Show.Show(function (v) {
      if (v instanceof MappingRelative) {
          return "relative";
      };
      if (v instanceof MappingAbsolute) {
          return "absolute";
      };
      throw new Error("Failed pattern match at Mathbox.Types line 334, column 1 - line 334, column 37: " + [ v.constructor.name ]);
  });
  var showJoin = new Data_Show.Show(function (v) {
      if (v instanceof JoinMiter) {
          return "miter";
      };
      if (v instanceof JoinRound) {
          return "round";
      };
      if (v instanceof JoinBevel) {
          return "bevel";
      };
      throw new Error("Failed pattern match at Mathbox.Types line 364, column 1 - line 364, column 31: " + [ v.constructor.name ]);
  });
  var showFragmentPass = new Data_Show.Show(function (v) {
      if (v instanceof FragmentPassColor) {
          return "color";
      };
      if (v instanceof FragmentPassLight) {
          return "light";
      };
      if (v instanceof FragmentPassRgba) {
          return "rgba";
      };
      throw new Error("Failed pattern match at Mathbox.Types line 433, column 1 - line 433, column 47: " + [ v.constructor.name ]);
  });
  var showFit = new Data_Show.Show(function (v) {
      if (v instanceof FitX) {
          return "x";
      };
      if (v instanceof FitY) {
          return "y";
      };
      if (v instanceof FitContain) {
          return "contain";
      };
      if (v instanceof FitCover) {
          return "cover";
      };
      throw new Error("Failed pattern match at Mathbox.Types line 464, column 1 - line 464, column 29: " + [ v.constructor.name ]);
  });
  var showFilter = new Data_Show.Show(function (v) {
      if (v instanceof FilterNearest) {
          return "nearest";
      };
      if (v instanceof FilterLinearMipmapLinear) {
          return "linearMipmapLinear";
      };
      if (v instanceof FilterLinearMipMapNearest) {
          return "linearMipMapNearest";
      };
      if (v instanceof FilterNearestMipMapLinear) {
          return "nearestMipMapLinear";
      };
      if (v instanceof FilterLinear) {
          return "linear";
      };
      if (v instanceof FilterNearestMipMapNearest) {
          return "nearestMipMapNearest";
      };
      throw new Error("Failed pattern match at Mathbox.Types line 280, column 1 - line 280, column 35: " + [ v.constructor.name ]);
  });
  var showEase = new Data_Show.Show(function (v) {
      if (v instanceof EaseLinear) {
          return "linear";
      };
      if (v instanceof EaseCosine) {
          return "cosine";
      };
      throw new Error("Failed pattern match at Mathbox.Types line 449, column 1 - line 449, column 31: " + [ v.constructor.name ]);
  });
  var showBlending = new Data_Show.Show(function (v) {
      if (v instanceof BlendingNo) {
          return "no";
      };
      if (v instanceof BlendingNormal) {
          return "normal";
      };
      if (v instanceof BlendingAdd) {
          return "add";
      };
      if (v instanceof BlendingSubstract) {
          return "substract";
      };
      if (v instanceof BlendingMultiply) {
          return "multiply";
      };
      if (v instanceof BlendingCustom) {
          return "custom";
      };
      throw new Error("Failed pattern match at Mathbox.Types line 261, column 1 - line 261, column 39: " + [ v.constructor.name ]);
  });
  var showAnchor = new Data_Show.Show(function (v) {
      if (v instanceof AnchorFirst) {
          return "first";
      };
      if (v instanceof AnchorMiddle) {
          return "middle";
      };
      if (v instanceof AnchorLast) {
          return "last";
      };
      throw new Error("Failed pattern match at Mathbox.Types line 481, column 1 - line 481, column 35: " + [ v.constructor.name ]);
  });
  var shapeToJs = function (e) {
      return $foreign.jsMkShape(Data_Show.show(showShape)(e));
  };
  var selectToJs = function (v) {
      return $foreign.jsMkSelect(v.value0);
  };
  var scaleToJs = function (e) {
      return $foreign.jsMkScale(Data_Show.show(showScale)(e));
  };                           
  var roundToJs = function (c) {
      return $foreign.jsMkRound;
  };
  var mkVertexPass0 = VertexPassView.value;
  var mkVec4 = function (a) {
      return function (b) {
          return function (c) {
              return function (d) {
                  return [ Data_Int.toNumber(a), Data_Int.toNumber(b), Data_Int.toNumber(c), Data_Int.toNumber(d) ];
              };
          };
      };
  };
  var mkVec40 = mkVec4(0)(0)(0)(0);
  var mkVec3 = function (x) {
      return function (y) {
          return function (z) {
              return [ Data_Int.toNumber(x), Data_Int.toNumber(y), Data_Int.toNumber(z) ];
          };
      };
  };
  var mkVec30 = mkVec3(0)(0)(0);
  var mkVec2 = function (x) {
      return function (y) {
          return [ Data_Int.toNumber(x), Data_Int.toNumber(y) ];
      };
  };                                                  
  var mkSwizzle1 = function (ls) {
      return new Swizzle(new Data_Maybe.Just(ls), Data_Maybe.Nothing.value);
  };                                                                               
  var mkSwizzle = function (is) {
      return function (i) {
          return new Swizzle(new Data_Maybe.Just(is), new Data_Maybe.Just(i));
      };
  };
  var mkStroke0 = StrokeSolid.value;
  var mkScale0 = ScaleLinear.value;
  var mkRound0 = new Round(Data_Maybe.Nothing.value);
  var mkQuat = function (x) {
      return function (y) {
          return function (z) {
              return function (w) {
                  return mkVec4(x)(y)(z)(w);
              };
          };
      };
  };
  var mkQuat0 = mkQuat(0)(0)(0)(1);      
  var mkJoin0 = JoinMiter.value;           
  var mkColor0 = new RgbColor(0.5, 0.5, 0.5);
  var mkClasses0 = new Classes([  ]);
  var mkBlending0 = BlendingNormal.value;
  var mkAxis0 = AxisX.value;         
  var mat4ToJs = function (m) {
      return $foreign.jsMkMat4(m);
  };
  var mappingToJs = function (e) {
      return $foreign.jsMkMapping(Data_Show.show(showMapping)(e));
  };
  var joinToJs = function (e) {
      return $foreign.jsMkJoin(Data_Show.show(showJoin)(e));
  };                
  var fragmentPassToJs = function (e) {
      return $foreign.jsMkFragmentPass(Data_Show.show(showFragmentPass)(e));
  };
  var fontToJs = function (v) {
      return $foreign.jsMkFont(v.value0);
  };
  var fitToJs = function (e) {
      return $foreign.jsMkFit(Data_Show.show(showFit)(e));
  };
  var filterToJs = function (e) {
      return $foreign.jsMkFilter(Data_Show.show(showFilter)(e));
  };
  var easeToJs = function (e) {
      return $foreign.jsMkEase(Data_Show.show(showEase)(e));
  };
  var colorToJs = function (v) {
      if (v instanceof RgbColor) {
          return $foreign.jsMkRgbColor(v.value0)(v.value1)(v.value2);
      };
      if (v instanceof StringColor) {
          return $foreign.jsMkStringColor(v.value0);
      };
      throw new Error("Failed pattern match at Mathbox.Types line 138, column 1 - line 138, column 30: " + [ v.constructor.name ]);
  };
  var classesToJs = function (v) {
      return $foreign.jsMkClasses(v.value0);
  };                    
  var blendingToJs = function (e) {
      return $foreign.jsMkBlending(Data_Show.show(showBlending)(e));
  };
  var axisToInt = function (v) {
      if (v instanceof Axis0) {
          return 0;
      };
      if (v instanceof AxisX) {
          return 1;
      };
      if (v instanceof AxisY) {
          return 2;
      };
      if (v instanceof AxisZ) {
          return 3;
      };
      if (v instanceof AxisW) {
          return 4;
      };
      throw new Error("Failed pattern match at Mathbox.Types line 214, column 1 - line 214, column 25: " + [ v.constructor.name ]);
  };
  var axisToJs = function (a) {
      return $foreign.jsMkAxis(axisToInt(a))(true);
  };                      
  var axis2 = AxisY.value;
  var anchorToJs = function (e) {
      return $foreign.jsMkAnchor(Data_Show.show(showAnchor)(e));
  };
  exports["AnchorFirst"] = AnchorFirst;
  exports["AnchorMiddle"] = AnchorMiddle;
  exports["AnchorLast"] = AnchorLast;
  exports["Axis0"] = Axis0;
  exports["AxisX"] = AxisX;
  exports["AxisY"] = AxisY;
  exports["AxisZ"] = AxisZ;
  exports["AxisW"] = AxisW;
  exports["BlendingNo"] = BlendingNo;
  exports["BlendingNormal"] = BlendingNormal;
  exports["BlendingAdd"] = BlendingAdd;
  exports["BlendingSubstract"] = BlendingSubstract;
  exports["BlendingMultiply"] = BlendingMultiply;
  exports["BlendingCustom"] = BlendingCustom;
  exports["Classes"] = Classes;
  exports["RgbColor"] = RgbColor;
  exports["StringColor"] = StringColor;
  exports["EaseLinear"] = EaseLinear;
  exports["EaseCosine"] = EaseCosine;
  exports["FilterNearest"] = FilterNearest;
  exports["FilterLinearMipmapLinear"] = FilterLinearMipmapLinear;
  exports["FilterLinearMipMapNearest"] = FilterLinearMipMapNearest;
  exports["FilterNearestMipMapLinear"] = FilterNearestMipMapLinear;
  exports["FilterLinear"] = FilterLinear;
  exports["FilterNearestMipMapNearest"] = FilterNearestMipMapNearest;
  exports["FitX"] = FitX;
  exports["FitY"] = FitY;
  exports["FitContain"] = FitContain;
  exports["FitCover"] = FitCover;
  exports["FragmentPassColor"] = FragmentPassColor;
  exports["FragmentPassLight"] = FragmentPassLight;
  exports["FragmentPassRgba"] = FragmentPassRgba;
  exports["JoinMiter"] = JoinMiter;
  exports["JoinRound"] = JoinRound;
  exports["JoinBevel"] = JoinBevel;
  exports["MappingRelative"] = MappingRelative;
  exports["MappingAbsolute"] = MappingAbsolute;
  exports["Round"] = Round;
  exports["ScaleLinear"] = ScaleLinear;
  exports["ScaleLog"] = ScaleLog;
  exports["ShapeCircle"] = ShapeCircle;
  exports["ShapeSquare"] = ShapeSquare;
  exports["ShapeDiamond"] = ShapeDiamond;
  exports["ShapeUp"] = ShapeUp;
  exports["ShapeDown"] = ShapeDown;
  exports["ShapeLeft"] = ShapeLeft;
  exports["ShapeRight"] = ShapeRight;
  exports["StrokeSolid"] = StrokeSolid;
  exports["StrokeDotted"] = StrokeDotted;
  exports["StrokeDashed"] = StrokeDashed;
  exports["Swizzle"] = Swizzle;
  exports["TypeFloat"] = TypeFloat;
  exports["TypeShort"] = TypeShort;
  exports["TypeUnsignedInt"] = TypeUnsignedInt;
  exports["TypeUnsignedShort"] = TypeUnsignedShort;
  exports["TypeInt"] = TypeInt;
  exports["TypeUnsignedByte"] = TypeUnsignedByte;
  exports["TypeByte"] = TypeByte;
  exports["VertexPassData"] = VertexPassData;
  exports["VertexPassView"] = VertexPassView;
  exports["VertexPassWorld"] = VertexPassWorld;
  exports["VertexPassEye"] = VertexPassEye;
  exports["anchorToJs"] = anchorToJs;
  exports["axis2"] = axis2;
  exports["axisToInt"] = axisToInt;
  exports["axisToJs"] = axisToJs;
  exports["blendingToJs"] = blendingToJs;
  exports["classesToJs"] = classesToJs;
  exports["colorToJs"] = colorToJs;
  exports["easeToJs"] = easeToJs;
  exports["filterToJs"] = filterToJs;
  exports["fitToJs"] = fitToJs;
  exports["fontToJs"] = fontToJs;
  exports["fragmentPassToJs"] = fragmentPassToJs;
  exports["joinToJs"] = joinToJs;
  exports["mappingToJs"] = mappingToJs;
  exports["mat4ToJs"] = mat4ToJs;
  exports["mkAxis0"] = mkAxis0;
  exports["mkBlending0"] = mkBlending0;
  exports["mkClasses0"] = mkClasses0;
  exports["mkColor0"] = mkColor0;
  exports["mkJoin0"] = mkJoin0;
  exports["mkQuat"] = mkQuat;
  exports["mkQuat0"] = mkQuat0;
  exports["mkRound0"] = mkRound0;
  exports["mkScale0"] = mkScale0;
  exports["mkStroke0"] = mkStroke0;
  exports["mkSwizzle"] = mkSwizzle;
  exports["mkSwizzle1"] = mkSwizzle1;
  exports["mkVec2"] = mkVec2;
  exports["mkVec3"] = mkVec3;
  exports["mkVec30"] = mkVec30;
  exports["mkVec4"] = mkVec4;
  exports["mkVec40"] = mkVec40;
  exports["mkVertexPass0"] = mkVertexPass0;
  exports["roundToJs"] = roundToJs;
  exports["scaleToJs"] = scaleToJs;
  exports["selectToJs"] = selectToJs;
  exports["shapeToJs"] = shapeToJs;
  exports["strokeToJs"] = strokeToJs;
  exports["swizzleToJs"] = swizzleToJs;
  exports["timestampToJs"] = timestampToJs;
  exports["transposeToJs"] = transposeToJs;
  exports["typeToJs"] = typeToJs;
  exports["vertexPassToJs"] = vertexPassToJs;
  exports["xyz"] = xyz;
  exports["showBlending"] = showBlending;
  exports["showFilter"] = showFilter;
  exports["showType"] = showType;
  exports["showScale"] = showScale;
  exports["showMapping"] = showMapping;
  exports["showJoin"] = showJoin;
  exports["showShape"] = showShape;
  exports["showStroke"] = showStroke;
  exports["showVertexPass"] = showVertexPass;
  exports["showFragmentPass"] = showFragmentPass;
  exports["showEase"] = showEase;
  exports["showFit"] = showFit;
  exports["showAnchor"] = showAnchor;
})(PS["Mathbox.Types"] = PS["Mathbox.Types"] || {});
(function(exports) {// module Signal

  function make(initial) {
    var subs = [];
    var val = initial;
    var sig = {
      subscribe: function(sub) {
        subs.push(sub);
        sub(val);
      },
      get: function() { return val; },
      set: function(newval) {
        val = newval;
        subs.forEach(function(sub) { sub(newval); });
      }
    };
    return sig;
  };                      

  exports.mapSig = function(fun) {
    return function(sig) {
      var out = make(fun(sig.get()));
      sig.subscribe(function(val) { out.set(fun(val)); });
      return out;
    };
  };
})(PS["Signal"] = PS["Signal"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Signal"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Prelude = PS["Prelude"];
  var functorSignal = new Data_Functor.Functor($foreign.mapSig);
  exports["functorSignal"] = functorSignal;
})(PS["Signal"] = PS["Signal"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Mathbox_Types = PS["Mathbox.Types"];
  var Prelude = PS["Prelude"];
  var Signal = PS["Signal"];        
  var Val = (function () {
      function Val(value0) {
          this.value0 = value0;
      };
      Val.create = function (value0) {
          return new Val(value0);
      };
      return Val;
  })();
  var Fun = (function () {
      function Fun(value0) {
          this.value0 = value0;
      };
      Fun.create = function (value0) {
          return new Fun(value0);
      };
      return Fun;
  })();
  var Sig = (function () {
      function Sig(value0) {
          this.value0 = value0;
      };
      Sig.create = function (value0) {
          return new Sig(value0);
      };
      return Sig;
  })();
  var functorField = new Data_Functor.Functor(function (f) {
      return function (v) {
          if (v instanceof Val) {
              return new Val(f(v.value0));
          };
          if (v instanceof Fun) {
              return new Fun(function (n) {
                  return f(v.value0(n));
              });
          };
          if (v instanceof Sig) {
              return new Sig(Data_Functor.map(Signal.functorSignal)(f)(v.value0));
          };
          throw new Error("Failed pattern match at Mathbox.Field line 12, column 1 - line 12, column 39: " + [ f.constructor.name, v.constructor.name ]);
      };
  });
  var maybeToNullable = function (f) {
      return function (v) {
          if (v instanceof Data_Maybe.Nothing) {
              return Data_Nullable.toNullable(Data_Maybe.Nothing.value);
          };
          if (v instanceof Data_Maybe.Just) {
              return Data_Nullable.toNullable(new Data_Maybe.Just(Data_Functor.map(functorField)(f)(v.value0)));
          };
          throw new Error("Failed pattern match at Mathbox.Field line 24, column 1 - line 24, column 81: " + [ f.constructor.name, v.constructor.name ]);
      };
  };
  var constrName = function (v) {
      if (v instanceof Val) {
          return "Val";
      };
      if (v instanceof Fun) {
          return "Fun";
      };
      if (v instanceof Sig) {
          return "Sig";
      };
      throw new Error("Failed pattern match at Mathbox.Field line 19, column 1 - line 19, column 42: " + [ v.constructor.name ]);
  };
  exports["Val"] = Val;
  exports["Fun"] = Fun;
  exports["Sig"] = Sig;
  exports["constrName"] = constrName;
  exports["maybeToNullable"] = maybeToNullable;
  exports["functorField"] = functorField;
})(PS["Mathbox.Field"] = PS["Mathbox.Field"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Mathbox_Field = PS["Mathbox.Field"];
  var Mathbox_Types = PS["Mathbox.Types"];
  var Prelude = PS["Prelude"];        
  var mkCamera = {
      id: Data_Maybe.Nothing.value, 
      classes: Mathbox_Field.Val.create(Mathbox_Types.mkClasses0), 
      proxy: Mathbox_Field.Val.create(false), 
      position: Data_Maybe.Nothing.value, 
      quaternion: Data_Maybe.Nothing.value, 
      rotation: Data_Maybe.Nothing.value, 
      lookAt: Data_Maybe.Nothing.value, 
      up: Data_Maybe.Nothing.value, 
      eulerOrder: Mathbox_Field.Val.create(Mathbox_Types.mkSwizzle1(Mathbox_Types.xyz)), 
      fov: Data_Maybe.Nothing.value
  };
  var cameraToJs = function (c) {
      return {
          id: Data_Nullable.toNullable(c.id), 
          classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(c.classes), 
          proxy: c.proxy, 
          position: Data_Nullable.toNullable(c.position), 
          quaternion: Data_Nullable.toNullable(c.quaternion), 
          rotation: Data_Nullable.toNullable(c.rotation), 
          lookAt: Data_Nullable.toNullable(c.lookAt), 
          up: Data_Nullable.toNullable(c.up), 
          eulerOrder: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.swizzleToJs)(c.eulerOrder), 
          fov: Data_Nullable.toNullable(c.fov)
      };
  };
  exports["cameraToJs"] = cameraToJs;
  exports["mkCamera"] = mkCamera;
})(PS["Mathbox.Class.Camera.Camera"] = PS["Mathbox.Class.Camera.Camera"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Mathbox_Field = PS["Mathbox.Field"];
  var Mathbox_Types = PS["Mathbox.Types"];
  var Prelude = PS["Prelude"];        
  var mkAxis = {
      id: Data_Maybe.Nothing.value, 
      classes: Mathbox_Field.Val.create(Mathbox_Types.mkClasses0), 
      visible: Mathbox_Field.Val.create(true), 
      opacity: Mathbox_Field.Val.create(1.0), 
      color: Mathbox_Field.Val.create(Mathbox_Types.mkColor0), 
      blending: Mathbox_Field.Val.create(Mathbox_Types.mkBlending0), 
      zWrite: Mathbox_Field.Val.create(true), 
      zTest: Mathbox_Field.Val.create(true), 
      zIndex: Mathbox_Field.Val.create(Mathbox_Types.mkRound0), 
      zBias: Mathbox_Field.Val.create(0.0), 
      zOrder: Data_Maybe.Nothing.value, 
      width: Mathbox_Field.Val.create(2.0), 
      depth: Mathbox_Field.Val.create(1.0), 
      join: Mathbox_Field.Val.create(Mathbox_Types.mkJoin0), 
      stroke: Mathbox_Field.Val.create(Mathbox_Types.mkStroke0), 
      proximity: Data_Maybe.Nothing.value, 
      closed: Mathbox_Field.Val.create(false), 
      detail: Mathbox_Field.Val.create(1), 
      crossed: Mathbox_Field.Val.create(false), 
      range: Data_Maybe.Nothing.value, 
      axis: Mathbox_Field.Val.create(Mathbox_Types.mkAxis0), 
      size: Mathbox_Field.Val.create(3.0), 
      start: Mathbox_Field.Val.create(false), 
      end: Mathbox_Field.Val.create(true), 
      origin: Mathbox_Field.Val.create(Mathbox_Types.mkVec40)
  };
  var axisToJs = function (a) {
      return {
          id: Data_Nullable.toNullable(a.id), 
          classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(a.classes), 
          visible: a.visible, 
          opacity: a.opacity, 
          color: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.colorToJs)(a.color), 
          blending: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.blendingToJs)(a.blending), 
          zWrite: a.zWrite, 
          zTest: a.zTest, 
          zIndex: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.roundToJs)(a.zIndex), 
          zBias: a.zBias, 
          zOrder: Data_Nullable.toNullable(a.zOrder), 
          width: a.width, 
          depth: a.depth, 
          join: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.joinToJs)(a.join), 
          stroke: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.strokeToJs)(a.stroke), 
          proximity: Data_Nullable.toNullable(a.proximity), 
          closed: a.closed, 
          detail: a.detail, 
          crossed: a.crossed, 
          range: Data_Nullable.toNullable(a.range), 
          axis: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.axisToJs)(a.axis), 
          size: a.size, 
          start: a.start, 
          end: a.end, 
          origin: a.origin
      };
  };
  exports["axisToJs"] = axisToJs;
  exports["mkAxis"] = mkAxis;
})(PS["Mathbox.Class.Draw.Axis"] = PS["Mathbox.Class.Draw.Axis"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Mathbox_Field = PS["Mathbox.Field"];
  var Mathbox_Types = PS["Mathbox.Types"];
  var Prelude = PS["Prelude"];        
  var mkGrid = {
      id: Data_Maybe.Nothing.value, 
      classes: Mathbox_Field.Val.create(Mathbox_Types.mkClasses0), 
      visible: Mathbox_Field.Val.create(true), 
      opacity: Mathbox_Field.Val.create(1.0), 
      color: Mathbox_Field.Val.create(Mathbox_Types.mkColor0), 
      blending: Mathbox_Field.Val.create(Mathbox_Types.mkBlending0), 
      zWrite: Mathbox_Field.Val.create(true), 
      zTest: Mathbox_Field.Val.create(true), 
      zIndex: Mathbox_Field.Val.create(Mathbox_Types.mkRound0), 
      zBias: Mathbox_Field.Val.create(0.0), 
      zOrder: Data_Maybe.Nothing.value, 
      width: Mathbox_Field.Val.create(2.0), 
      depth: Mathbox_Field.Val.create(1.0), 
      join: Mathbox_Field.Val.create(Mathbox_Types.mkJoin0), 
      stroke: Mathbox_Field.Val.create(Mathbox_Types.mkStroke0), 
      proximity: Data_Maybe.Nothing.value, 
      closed: Mathbox_Field.Val.create(false), 
      lineX: Mathbox_Field.Val.create(true), 
      lineY: Mathbox_Field.Val.create(true), 
      crossed: Mathbox_Field.Val.create(false), 
      closedX: Mathbox_Field.Val.create(false), 
      closedY: Mathbox_Field.Val.create(false), 
      axes: Mathbox_Field.Val.create(Mathbox_Types.mkSwizzle([ 1, 2 ])(2)), 
      origin: Mathbox_Field.Val.create(Mathbox_Types.mkVec40), 
      detailX: Mathbox_Field.Val.create(1), 
      crossedX: Mathbox_Field.Val.create(false), 
      detailY: Mathbox_Field.Val.create(1), 
      crossedY: Mathbox_Field.Val.create(false), 
      divideX: Mathbox_Field.Val.create(10.0), 
      unitX: Mathbox_Field.Val.create(1.0), 
      baseX: Mathbox_Field.Val.create(10.0), 
      modeX: Mathbox_Field.Val.create(Mathbox_Types.mkScale0), 
      startX: Mathbox_Field.Val.create(true), 
      endX: Mathbox_Field.Val.create(true), 
      zeroX: Mathbox_Field.Val.create(true), 
      factorX: Mathbox_Field.Val.create(1.0), 
      niceX: Mathbox_Field.Val.create(true), 
      divideY: Mathbox_Field.Val.create(10.0), 
      unitY: Mathbox_Field.Val.create(1.0), 
      baseY: Mathbox_Field.Val.create(10.0), 
      modeY: Mathbox_Field.Val.create(Mathbox_Types.mkScale0), 
      startY: Mathbox_Field.Val.create(true), 
      endY: Mathbox_Field.Val.create(true), 
      zeroY: Mathbox_Field.Val.create(true), 
      factorY: Mathbox_Field.Val.create(1.0), 
      niceY: Mathbox_Field.Val.create(true), 
      rangeX: Data_Maybe.Nothing.value, 
      rangeY: Data_Maybe.Nothing.value
  };
  var gridToJs = function (g) {
      return {
          id: Data_Nullable.toNullable(g.id), 
          classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(g.classes), 
          visible: g.visible, 
          opacity: g.opacity, 
          color: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.colorToJs)(g.color), 
          blending: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.blendingToJs)(g.blending), 
          zWrite: g.zWrite, 
          zTest: g.zTest, 
          zIndex: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.roundToJs)(g.zIndex), 
          zBias: g.zBias, 
          zOrder: Data_Nullable.toNullable(g.zOrder), 
          width: g.width, 
          depth: g.depth, 
          join: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.joinToJs)(g.join), 
          stroke: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.strokeToJs)(g.stroke), 
          proximity: Data_Nullable.toNullable(g.proximity), 
          closed: g.closed, 
          lineX: g.lineX, 
          lineY: g.lineY, 
          crossed: g.crossed, 
          closedX: g.closedX, 
          closedY: g.closedY, 
          axes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.swizzleToJs)(g.axes), 
          origin: g.origin, 
          detailX: g.detailX, 
          crossedX: g.crossedX, 
          detailY: g.detailY, 
          crossedY: g.crossedY, 
          divideX: g.divideX, 
          unitX: g.unitX, 
          baseX: g.baseX, 
          modeX: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.scaleToJs)(g.modeX), 
          startX: g.startX, 
          endX: g.endX, 
          zeroX: g.zeroX, 
          factorX: g.factorX, 
          niceX: g.niceX, 
          divideY: g.divideY, 
          unitY: g.unitY, 
          baseY: g.baseY, 
          modeY: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.scaleToJs)(g.modeY), 
          startY: g.startY, 
          endY: g.endY, 
          zeroY: g.zeroY, 
          factorY: g.factorY, 
          niceY: g.niceY, 
          rangeX: Data_Nullable.toNullable(g.rangeX), 
          rangeY: Data_Nullable.toNullable(g.rangeY)
      };
  };
  exports["gridToJs"] = gridToJs;
  exports["mkGrid"] = mkGrid;
})(PS["Mathbox.Class.Draw.Grid"] = PS["Mathbox.Class.Draw.Grid"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Data_Ring = PS["Data.Ring"];
  var Mathbox_Field = PS["Mathbox.Field"];
  var Mathbox_Types = PS["Mathbox.Types"];
  var Prelude = PS["Prelude"];        
  var mkCartesian = {
      id: Data_Maybe.Nothing.value, 
      classes: Mathbox_Field.Val.create(Mathbox_Types.mkClasses0), 
      visible: Mathbox_Field.Val.create(true), 
      range: Mathbox_Field.Val.create([ Mathbox_Types.mkVec2(-1 | 0)(1) ]), 
      position: Mathbox_Field.Val.create(Mathbox_Types.mkVec30), 
      quaternion: Mathbox_Field.Val.create(Mathbox_Types.mkQuat0), 
      rotation: Mathbox_Field.Val.create(Mathbox_Types.mkVec30), 
      scale: Mathbox_Field.Val.create(Mathbox_Types.mkVec3(1)(1)(1)), 
      eulerOrder: Mathbox_Field.Val.create(Mathbox_Types.mkSwizzle1(Mathbox_Types.xyz)), 
      pass: Mathbox_Field.Val.create(Mathbox_Types.mkVertexPass0)
  };
  var cartesianToJs = function (c) {
      return {
          id: Data_Nullable.toNullable(c.id), 
          classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(c.classes), 
          visible: c.visible, 
          range: c.range, 
          position: c.position, 
          quaternion: c.quaternion, 
          rotation: c.rotation, 
          scale: c.scale, 
          eulerOrder: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.swizzleToJs)(c.eulerOrder), 
          pass: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.vertexPassToJs)(c.pass)
      };
  };
  exports["cartesianToJs"] = cartesianToJs;
  exports["mkCartesian"] = mkCartesian;
})(PS["Mathbox.Class.View.Cartesian"] = PS["Mathbox.Class.View.Cartesian"] || {});
(function(exports) {
    "use strict";

  exports.trackballControls = THREE.TrackballControls;

  exports.setThreeClearColor = function (color) {
      return function(alpha) {
          return function(three) {
              three.renderer.setClearColor(color, alpha);
              return three;
          };
      };
  };

  exports.mkMathbox = function (options) {
      return function () {
          var mathbox = mathBox(options);
          if (mathbox.fallback) throw "WebGL not supported";
          return mathbox;
      };
  };

  exports.applyOnThree = function(f) {
      return function(mathbox) {
          return function() {
              f(mathbox.three);
              return mathbox;
          };
      };
  };

  exports.jsAdd = function (ctx) {
      return function (type) {
          return function (options) {
              return function (fieldConstrName) {
                  return function () {
                      var splitted = split(fieldConstrName, options.value0);
                      return ctx.add(type, splitted[0], splitted[1]);
                  };
              };
          };
      };
  };

  exports.jsEnd = function (ctx) {
      return function () {
          return ctx.end();
      };
  };

  var split = function(fieldConstrName, object) {
      var options = {};
      var binds = {};
      for(var prop in object) {
          var propVal = object[prop];
          try {
            var v = unwrap(fieldConstrName, propVal);
          } catch (e) {
            var str = JSON.stringify(object);
            console.log(str);
            console.log(object);
            console.log(prop);
            throw e;
          }
          if (v != null) {
              if (v[0] != null) {
                  options[prop] = v[0];
              } else if (v[1] != null) {
                  binds[prop] = v[1];
              }
          }
      }
      return [options, binds];
  };

  var signalToFun = function (signal) {
    return function(t) {
      return signal.get();
    }
  };

  var unwrap = function(fieldConstrName, propVal) {
      if (propVal == null) {
        return [null, null];
      }
      if (fieldConstrName(propVal) === 'Val') {
          return [propVal.value0, null];
      }
      if (fieldConstrName(propVal) === 'Fun') {
        return [null, propVal.value0];
      }
      if (fieldConstrName(propVal) === 'Sig') {
        return [null, signalToFun(propVal.value0)];
      }
      console.log(propVal);
      throw "Unexpected propVal:" + propVal;
  };

  exports.jsSet_k = function (ctx) {
      return function (key) {
          return function () {
              return ctx.set(key);
          };
      };
  };
})(PS["Mathbox.Mathbox"] = PS["Mathbox.Mathbox"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Mathbox_Field = PS["Mathbox.Field"];
  var Mathbox_Types = PS["Mathbox.Types"];
  var Prelude = PS["Prelude"];
  var groupToJs = function (g) {
      return {
          id: Data_Nullable.toNullable(g.id), 
          classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(g.classes), 
          visible: g.visible, 
          active: g.active
      };
  };
  exports["groupToJs"] = groupToJs;
})(PS["Mathbox.Class.Base.Group"] = PS["Mathbox.Class.Base.Group"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Mathbox_Field = PS["Mathbox.Field"];
  var Mathbox_Types = PS["Mathbox.Types"];
  var Prelude = PS["Prelude"];
  var inheritToJs = function (i) {
      return {
          id: Data_Nullable.toNullable(i.id), 
          classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(i.classes)
      };
  };
  exports["inheritToJs"] = inheritToJs;
})(PS["Mathbox.Class.Base.Inherit"] = PS["Mathbox.Class.Base.Inherit"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Mathbox_Field = PS["Mathbox.Field"];
  var Mathbox_Types = PS["Mathbox.Types"];
  var Prelude = PS["Prelude"];        
  var parentToJs = function (p) {
      return {
          id: Data_Nullable.toNullable(p.id), 
          classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(p.classes)
      };
  };
  exports["parentToJs"] = parentToJs;
})(PS["Mathbox.Class.Base.Parent"] = PS["Mathbox.Class.Base.Parent"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Mathbox_Field = PS["Mathbox.Field"];
  var Mathbox_Types = PS["Mathbox.Types"];
  var Prelude = PS["Prelude"];        
  var rootToJs = function (r) {
      return {
          id: Data_Nullable.toNullable(r.id), 
          classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(r.classes), 
          speed: r.speed, 
          camera: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.selectToJs)(r.camera), 
          pass: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.vertexPassToJs)(r.pass), 
          scale: Data_Nullable.toNullable(r.scale), 
          fov: Data_Nullable.toNullable(r.fov), 
          focus: Data_Nullable.toNullable(r.focus)
      };
  };
  exports["rootToJs"] = rootToJs;
})(PS["Mathbox.Class.Base.Root"] = PS["Mathbox.Class.Base.Root"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Mathbox_Field = PS["Mathbox.Field"];
  var Mathbox_Types = PS["Mathbox.Types"];
  var Prelude = PS["Prelude"];        
  var sourceToJs = function (s) {
      return {
          id: Data_Nullable.toNullable(s.id), 
          classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(s.classes)
      };
  };
  exports["sourceToJs"] = sourceToJs;
})(PS["Mathbox.Class.Base.Source"] = PS["Mathbox.Class.Base.Source"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Mathbox_Field = PS["Mathbox.Field"];
  var Mathbox_Types = PS["Mathbox.Types"];
  var Prelude = PS["Prelude"];        
  var unitToJs = function (u) {
      return {
          id: Data_Nullable.toNullable(u.id), 
          classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(u.classes), 
          scale: Data_Nullable.toNullable(u.scale), 
          fov: Data_Nullable.toNullable(u.fov), 
          focus: Data_Nullable.toNullable(u.focus)
      };
  };
  exports["unitToJs"] = unitToJs;
})(PS["Mathbox.Class.Base.Unit"] = PS["Mathbox.Class.Base.Unit"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Mathbox_Field = PS["Mathbox.Field"];
  var Mathbox_Types = PS["Mathbox.Types"];
  var Prelude = PS["Prelude"];
  var areaToJs = function (a) {
      return {
          id: Data_Nullable.toNullable(a.id), 
          classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(a.classes), 
          channels: a.channels, 
          items: a.items, 
          fps: Data_Nullable.toNullable(a.fps), 
          hurry: a.hurry, 
          limit: a.limit, 
          realtime: a.realtime, 
          observe: a.observe, 
          aligned: a.aligned, 
          data: Data_Nullable.toNullable(a.data), 
          expr: Data_Nullable.toNullable(a.expr), 
          bind: Data_Nullable.toNullable(a.bind), 
          live: a.live, 
          width: Data_Nullable.toNullable(a.width), 
          height: Data_Nullable.toNullable(a.height), 
          history: a.history, 
          bufferWidth: a.bufferWidth, 
          bufferHeight: a.bufferHeight, 
          minFilter: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.filterToJs)(a.minFilter), 
          magFilter: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.filterToJs)(a.magFilter), 
          type: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.typeToJs)(a.type), 
          rangeX: Data_Nullable.toNullable(a.rangeX), 
          rangeY: Data_Nullable.toNullable(a.rangeY), 
          axes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.swizzleToJs)(a.axes), 
          centeredX: a.centeredX, 
          paddingX: a.paddingX, 
          centeredY: a.centeredY, 
          paddingY: a.paddingY
      };
  };
  exports["areaToJs"] = areaToJs;
})(PS["Mathbox.Class.Data.Area"] = PS["Mathbox.Class.Data.Area"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Mathbox_Field = PS["Mathbox.Field"];
  var Mathbox_Types = PS["Mathbox.Types"];
  var Prelude = PS["Prelude"];
  var array_ToJs = function (a) {
      return {
          id: Data_Nullable.toNullable(a.id), 
          classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(a.classes), 
          channels: a.channels, 
          items: a.items, 
          fps: Data_Nullable.toNullable(a.fps), 
          hurry: a.hurry, 
          limit: a.limit, 
          realtime: a.realtime, 
          observe: a.observe, 
          aligned: a.aligned, 
          data: Data_Nullable.toNullable(a.data), 
          expr: Data_Nullable.toNullable(a.expr), 
          bind: Data_Nullable.toNullable(a.bind), 
          live: a.live, 
          width: Data_Nullable.toNullable(a.width), 
          bufferWidth: a.bufferWidth, 
          history: a.history, 
          minFilter: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.filterToJs)(a.minFilter), 
          magFilter: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.filterToJs)(a.magFilter), 
          type: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.typeToJs)(a.type)
      };
  };
  exports["array_ToJs"] = array_ToJs;
})(PS["Mathbox.Class.Data.Array"] = PS["Mathbox.Class.Data.Array"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Mathbox_Field = PS["Mathbox.Field"];
  var Mathbox_Types = PS["Mathbox.Types"];
  var Prelude = PS["Prelude"];
  var bufferToJs = function (b) {
      return {
          id: Data_Nullable.toNullable(b.id), 
          classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(b.classes), 
          channels: b.channels, 
          items: b.items, 
          fps: Data_Nullable.toNullable(b.fps), 
          hurry: b.hurry, 
          limit: b.limit, 
          realtime: b.realtime, 
          observe: b.observe, 
          aligned: b.aligned, 
          data: Data_Nullable.toNullable(b.data), 
          expr: Data_Nullable.toNullable(b.expr), 
          bind: Data_Nullable.toNullable(b.bind), 
          live: b.live, 
          minFilter: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.filterToJs)(b.minFilter), 
          magFilter: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.filterToJs)(b.magFilter), 
          type: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.typeToJs)(b.type)
      };
  };
  exports["bufferToJs"] = bufferToJs;
})(PS["Mathbox.Class.Data.Buffer"] = PS["Mathbox.Class.Data.Buffer"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Mathbox_Field = PS["Mathbox.Field"];
  var Mathbox_Types = PS["Mathbox.Types"];
  var Prelude = PS["Prelude"];
  var dataToJs = function (d) {
      return {
          id: Data_Nullable.toNullable(d.id), 
          classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(d.classes), 
          data: Data_Nullable.toNullable(d.data), 
          expr: Data_Nullable.toNullable(d.expr), 
          bind: Data_Nullable.toNullable(d.bind), 
          live: d.live, 
          active: d.active
      };
  };
  exports["dataToJs"] = dataToJs;
})(PS["Mathbox.Class.Data.Data"] = PS["Mathbox.Class.Data.Data"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Mathbox_Field = PS["Mathbox.Field"];
  var Mathbox_Types = PS["Mathbox.Types"];
  var Prelude = PS["Prelude"];
  var intervalToJs = function (i) {
      return {
          id: Data_Nullable.toNullable(i.id), 
          classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(i.classes), 
          channels: i.channels, 
          items: i.items, 
          fps: Data_Nullable.toNullable(i.fps), 
          hurry: i.hurry, 
          limit: i.limit, 
          realtime: i.realtime, 
          observe: i.observe, 
          aligned: i.aligned, 
          data: Data_Nullable.toNullable(i.data), 
          expr: Data_Nullable.toNullable(i.expr), 
          bind: Data_Nullable.toNullable(i.bind), 
          live: i.live, 
          minFilter: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.filterToJs)(i.minFilter), 
          magFilter: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.filterToJs)(i.magFilter), 
          type: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.typeToJs)(i.type), 
          width: Data_Nullable.toNullable(i.width), 
          bufferWidth: i.bufferWidth, 
          history: i.history, 
          range: Data_Nullable.toNullable(i.range), 
          axis: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.axisToJs)(i.axis), 
          centered: i.centered, 
          padding: i.padding
      };
  };
  exports["intervalToJs"] = intervalToJs;
})(PS["Mathbox.Class.Data.Interval"] = PS["Mathbox.Class.Data.Interval"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Mathbox_Field = PS["Mathbox.Field"];
  var Mathbox_Types = PS["Mathbox.Types"];
  var Prelude = PS["Prelude"];
  var matrixToJs = function (m) {
      return {
          id: Data_Nullable.toNullable(m.id), 
          classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(m.classes), 
          channels: m.channels, 
          items: m.items, 
          fps: Data_Nullable.toNullable(m.fps), 
          hurry: m.hurry, 
          limit: m.limit, 
          realtime: m.realtime, 
          observe: m.observe, 
          aligned: m.aligned, 
          data: Data_Nullable.toNullable(m.data), 
          expr: Data_Nullable.toNullable(m.expr), 
          bind: Data_Nullable.toNullable(m.bind), 
          live: m.live, 
          minFilter: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.filterToJs)(m.minFilter), 
          magFilter: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.filterToJs)(m.magFilter), 
          type: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.typeToJs)(m.type), 
          width: Data_Nullable.toNullable(m.width), 
          height: Data_Nullable.toNullable(m.height), 
          history: m.history, 
          bufferWidth: m.bufferWidth, 
          bufferHeight: m.bufferHeight
      };
  };
  exports["matrixToJs"] = matrixToJs;
})(PS["Mathbox.Class.Data.Matrix"] = PS["Mathbox.Class.Data.Matrix"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Mathbox_Field = PS["Mathbox.Field"];
  var Mathbox_Types = PS["Mathbox.Types"];
  var Prelude = PS["Prelude"];        
  var resolveToJs = function (r) {
      return {
          id: Data_Nullable.toNullable(r.id), 
          classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(r.classes), 
          data: Data_Nullable.toNullable(r.data), 
          expr: Data_Nullable.toNullable(r.expr), 
          bind: Data_Nullable.toNullable(r.bind), 
          live: r.live, 
          width: Data_Nullable.toNullable(r.width), 
          height: Data_Nullable.toNullable(r.height), 
          depth: Data_Nullable.toNullable(r.depth), 
          bufferWidth: r.bufferWidth, 
          bufferHeight: r.bufferHeight, 
          bufferDepth: r.bufferDepth
      };
  };
  exports["resolveToJs"] = resolveToJs;
})(PS["Mathbox.Class.Data.Resolve"] = PS["Mathbox.Class.Data.Resolve"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Mathbox_Field = PS["Mathbox.Field"];
  var Mathbox_Types = PS["Mathbox.Types"];
  var Prelude = PS["Prelude"];        
  var scaleToJs = function (s) {
      return {
          id: Data_Nullable.toNullable(s.id), 
          classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(s.classes), 
          axis: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.axisToJs)(s.axis), 
          range: Data_Nullable.toNullable(s.range), 
          divide: s.divide, 
          unit: s.unit, 
          base: s.base, 
          mode: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.scaleToJs)(s.mode), 
          start: s.start, 
          end: s.end, 
          zero: s.zero, 
          factor: s.factor, 
          nice: s.nice, 
          origin: s.origin
      };
  };
  exports["scaleToJs"] = scaleToJs;
})(PS["Mathbox.Class.Data.Scale"] = PS["Mathbox.Class.Data.Scale"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Mathbox_Field = PS["Mathbox.Field"];
  var Mathbox_Types = PS["Mathbox.Types"];
  var Prelude = PS["Prelude"];        
  var volumeToJs = function (v) {
      return {
          id: Data_Nullable.toNullable(v.id), 
          classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(v.classes), 
          channels: v.channels, 
          items: v.items, 
          fps: Data_Nullable.toNullable(v.fps), 
          hurry: v.hurry, 
          limit: v.limit, 
          realtime: v.realtime, 
          observe: v.observe, 
          aligned: v.aligned, 
          data: Data_Nullable.toNullable(v.data), 
          expr: Data_Nullable.toNullable(v.expr), 
          bind: Data_Nullable.toNullable(v.bind), 
          live: v.live, 
          minFilter: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.filterToJs)(v.minFilter), 
          magFilter: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.filterToJs)(v.magFilter), 
          type: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.typeToJs)(v.type), 
          width: Data_Nullable.toNullable(v.width), 
          height: Data_Nullable.toNullable(v.height), 
          depth: Data_Nullable.toNullable(v.depth), 
          bufferWidth: v.bufferWidth, 
          bufferHeight: v.bufferHeight, 
          bufferDepth: v.bufferDepth, 
          rangeX: Data_Nullable.toNullable(v.rangeX), 
          rangeY: Data_Nullable.toNullable(v.rangeY), 
          rangeZ: Data_Nullable.toNullable(v.rangeZ), 
          axes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.swizzleToJs)(v.axes), 
          centeredX: v.centeredX, 
          paddingX: v.paddingX, 
          centeredY: v.centeredY, 
          paddingY: v.paddingY, 
          centeredZ: v.centeredZ, 
          paddingZ: v.paddingZ
      };
  };
  exports["volumeToJs"] = volumeToJs;
})(PS["Mathbox.Class.Data.Volume"] = PS["Mathbox.Class.Data.Volume"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Mathbox_Field = PS["Mathbox.Field"];
  var Mathbox_Types = PS["Mathbox.Types"];
  var Prelude = PS["Prelude"];        
  var voxelToJs = function (v) {
      return {
          id: Data_Nullable.toNullable(v.id), 
          classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(v.classes), 
          channels: v.channels, 
          items: v.items, 
          fps: Data_Nullable.toNullable(v.fps), 
          hurry: v.hurry, 
          limit: v.limit, 
          realtime: v.realtime, 
          observe: v.observe, 
          aligned: v.aligned, 
          data: Data_Nullable.toNullable(v.data), 
          expr: Data_Nullable.toNullable(v.expr), 
          bind: Data_Nullable.toNullable(v.bind), 
          live: v.live, 
          minFilter: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.filterToJs)(v.minFilter), 
          magFilter: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.filterToJs)(v.magFilter), 
          type: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.typeToJs)(v.type), 
          width: Data_Nullable.toNullable(v.width), 
          height: Data_Nullable.toNullable(v.height), 
          depth: Data_Nullable.toNullable(v.depth), 
          bufferWidth: v.bufferWidth, 
          bufferHeight: v.bufferHeight, 
          bufferDepth: v.bufferDepth
      };
  };
  exports["voxelToJs"] = voxelToJs;
})(PS["Mathbox.Class.Data.Voxel"] = PS["Mathbox.Class.Data.Voxel"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Mathbox_Field = PS["Mathbox.Field"];
  var Mathbox_Types = PS["Mathbox.Types"];
  var Prelude = PS["Prelude"];
  var faceToJs = function (f) {
      return {
          id: Data_Nullable.toNullable(f.id), 
          classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(f.classes), 
          visible: f.visible, 
          opacity: f.opacity, 
          color: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.colorToJs)(f.color), 
          blending: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.blendingToJs)(f.blending), 
          zWrite: f.zWrite, 
          zTest: f.zTest, 
          zIndex: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.roundToJs)(f.zIndex), 
          zBias: f.zBias, 
          zOrder: Data_Nullable.toNullable(f.zOrder), 
          width: f.width, 
          depth: f.depth, 
          join: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.joinToJs)(f.join), 
          stroke: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.strokeToJs)(f.stroke), 
          proximity: Data_Nullable.toNullable(f.proximity), 
          closed: f.closed, 
          fill: f.fill, 
          shaded: f.shaded, 
          map: Mathbox_Field.maybeToNullable(Mathbox_Types.selectToJs)(f.map), 
          lineBias: f.lineBias, 
          line: f.line, 
          points: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.selectToJs)(f.points), 
          colors: Mathbox_Field.maybeToNullable(Mathbox_Types.selectToJs)(f.colors)
      };
  };
  exports["faceToJs"] = faceToJs;
})(PS["Mathbox.Class.Draw.Face"] = PS["Mathbox.Class.Draw.Face"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Mathbox_Field = PS["Mathbox.Field"];
  var Mathbox_Types = PS["Mathbox.Types"];
  var Prelude = PS["Prelude"];
  var lineToJs = function (l) {
      return {
          id: Data_Nullable.toNullable(l.id), 
          classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(l.classes), 
          visible: l.visible, 
          opacity: l.opacity, 
          color: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.colorToJs)(l.color), 
          blending: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.blendingToJs)(l.blending), 
          zWrite: l.zWrite, 
          zTest: l.zTest, 
          zIndex: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.roundToJs)(l.zIndex), 
          zBias: l.zBias, 
          zOrder: Data_Nullable.toNullable(l.zOrder), 
          width: l.width, 
          depth: l.depth, 
          join: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.joinToJs)(l.join), 
          stroke: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.strokeToJs)(l.stroke), 
          proximity: Data_Nullable.toNullable(l.proximity), 
          closed: l.closed, 
          size: l.size, 
          start: l.start, 
          end: l.end, 
          points: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.selectToJs)(l.points), 
          colors: Mathbox_Field.maybeToNullable(Mathbox_Types.selectToJs)(l.colors)
      };
  };
  exports["lineToJs"] = lineToJs;
})(PS["Mathbox.Class.Draw.Line"] = PS["Mathbox.Class.Draw.Line"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Mathbox_Field = PS["Mathbox.Field"];
  var Mathbox_Types = PS["Mathbox.Types"];
  var Prelude = PS["Prelude"];        
  var pointToJs = function (p) {
      return {
          id: Data_Nullable.toNullable(p.id), 
          classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(p.classes), 
          visible: p.visible, 
          opacity: p.opacity, 
          color: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.colorToJs)(p.color), 
          blending: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.blendingToJs)(p.blending), 
          zWrite: p.zWrite, 
          zTest: p.zTest, 
          zIndex: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.roundToJs)(p.zIndex), 
          zBias: p.zBias, 
          zOrder: Data_Nullable.toNullable(p.zOrder), 
          size: p.size, 
          sizes: Mathbox_Field.maybeToNullable(Mathbox_Types.selectToJs)(p.sizes), 
          shape: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.shapeToJs)(p.shape), 
          optical: p.optical, 
          fill: p.fill, 
          depth: p.depth, 
          points: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.selectToJs)(p.points), 
          colors: Mathbox_Field.maybeToNullable(Mathbox_Types.selectToJs)(p.colors)
      };
  };
  exports["pointToJs"] = pointToJs;
})(PS["Mathbox.Class.Draw.Point"] = PS["Mathbox.Class.Draw.Point"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Mathbox_Field = PS["Mathbox.Field"];
  var Mathbox_Types = PS["Mathbox.Types"];
  var Prelude = PS["Prelude"];        
  var stripToJs = function (s) {
      return {
          id: Data_Nullable.toNullable(s.id), 
          classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(s.classes), 
          visible: s.visible, 
          opacity: s.opacity, 
          color: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.colorToJs)(s.color), 
          blending: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.blendingToJs)(s.blending), 
          zWrite: s.zWrite, 
          zTest: s.zTest, 
          zIndex: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.roundToJs)(s.zIndex), 
          zBias: s.zBias, 
          zOrder: Data_Nullable.toNullable(s.zOrder), 
          width: s.width, 
          depth: s.depth, 
          join: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.joinToJs)(s.join), 
          stroke: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.strokeToJs)(s.stroke), 
          proximity: Data_Nullable.toNullable(s.proximity), 
          closed: s.closed, 
          fill: s.fill, 
          shaded: s.shaded, 
          map: Mathbox_Field.maybeToNullable(Mathbox_Types.selectToJs)(s.map), 
          lineBias: s.lineBias, 
          line: s.line, 
          points: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.selectToJs)(s.points), 
          colors: Mathbox_Field.maybeToNullable(Mathbox_Types.selectToJs)(s.colors)
      };
  };
  exports["stripToJs"] = stripToJs;
})(PS["Mathbox.Class.Draw.Strip"] = PS["Mathbox.Class.Draw.Strip"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Mathbox_Field = PS["Mathbox.Field"];
  var Mathbox_Types = PS["Mathbox.Types"];
  var Prelude = PS["Prelude"];        
  var surfaceToJs = function (s) {
      return {
          id: Data_Nullable.toNullable(s.id), 
          classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(s.classes), 
          visible: s.visible, 
          opacity: s.opacity, 
          color: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.colorToJs)(s.color), 
          blending: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.blendingToJs)(s.blending), 
          zWrite: s.zWrite, 
          zTest: s.zTest, 
          zIndex: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.roundToJs)(s.zIndex), 
          zBias: s.zBias, 
          zOrder: Data_Nullable.toNullable(s.zOrder), 
          width: s.width, 
          depth: s.depth, 
          join: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.joinToJs)(s.join), 
          stroke: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.strokeToJs)(s.stroke), 
          proximity: Data_Nullable.toNullable(s.proximity), 
          closed: s.closed, 
          fill: s.fill, 
          shaded: s.shaded, 
          map: Mathbox_Field.maybeToNullable(Mathbox_Types.selectToJs)(s.map), 
          lineBias: s.lineBias, 
          points: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.selectToJs)(s.points), 
          colors: Mathbox_Field.maybeToNullable(Mathbox_Types.selectToJs)(s.colors), 
          lineX: s.lineX, 
          lineY: s.lineY, 
          crossed: s.crossed, 
          closedX: s.closedX, 
          closedY: s.closedY
      };
  };
  exports["surfaceToJs"] = surfaceToJs;
})(PS["Mathbox.Class.Draw.Surface"] = PS["Mathbox.Class.Draw.Surface"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Mathbox_Field = PS["Mathbox.Field"];
  var Mathbox_Types = PS["Mathbox.Types"];
  var Prelude = PS["Prelude"];        
  var ticksToJs = function (t) {
      return {
          id: Data_Nullable.toNullable(t.id), 
          classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(t.classes), 
          visible: t.visible, 
          opacity: t.opacity, 
          color: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.colorToJs)(t.color), 
          blending: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.blendingToJs)(t.blending), 
          zWrite: t.zWrite, 
          zTest: t.zTest, 
          zIndex: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.roundToJs)(t.zIndex), 
          zBias: t.zBias, 
          zOrder: Data_Nullable.toNullable(t.zOrder), 
          width: t.width, 
          depth: t.depth, 
          join: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.joinToJs)(t.join), 
          stroke: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.strokeToJs)(t.stroke), 
          proximity: Data_Nullable.toNullable(t.proximity), 
          closed: t.closed, 
          normal: t.normal, 
          size: t.size, 
          epsilon: t.epsilon, 
          points: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.selectToJs)(t.points), 
          colors: Mathbox_Field.maybeToNullable(Mathbox_Types.selectToJs)(t.colors)
      };
  };
  exports["ticksToJs"] = ticksToJs;
})(PS["Mathbox.Class.Draw.Ticks"] = PS["Mathbox.Class.Draw.Ticks"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Mathbox_Field = PS["Mathbox.Field"];
  var Mathbox_Types = PS["Mathbox.Types"];
  var Prelude = PS["Prelude"];        
  var vectorToJs = function (v) {
      return {
          id: Data_Nullable.toNullable(v.id), 
          classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(v.classes), 
          visible: v.visible, 
          opacity: v.opacity, 
          color: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.colorToJs)(v.color), 
          blending: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.blendingToJs)(v.blending), 
          zWrite: v.zWrite, 
          zTest: v.zTest, 
          zIndex: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.roundToJs)(v.zIndex), 
          zBias: v.zBias, 
          zOrder: Data_Nullable.toNullable(v.zOrder), 
          width: v.width, 
          depth: v.depth, 
          join: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.joinToJs)(v.join), 
          stroke: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.strokeToJs)(v.stroke), 
          proximity: Data_Nullable.toNullable(v.proximity), 
          closed: v.closed, 
          size: v.size, 
          start: v.start, 
          end: v.end, 
          points: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.selectToJs)(v.points), 
          colors: Mathbox_Field.maybeToNullable(Mathbox_Types.selectToJs)(v.colors)
      };
  };
  exports["vectorToJs"] = vectorToJs;
})(PS["Mathbox.Class.Draw.Vector"] = PS["Mathbox.Class.Draw.Vector"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Mathbox_Field = PS["Mathbox.Field"];
  var Mathbox_Types = PS["Mathbox.Types"];
  var Prelude = PS["Prelude"];
  var clampToJs = function (c) {
      return {
          id: Data_Nullable.toNullable(c.id), 
          classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(c.classes), 
          source: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.selectToJs)(c.source)
      };
  };
  exports["clampToJs"] = clampToJs;
})(PS["Mathbox.Class.Operator.Clamp"] = PS["Mathbox.Class.Operator.Clamp"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Mathbox_Field = PS["Mathbox.Field"];
  var Mathbox_Types = PS["Mathbox.Types"];
  var Prelude = PS["Prelude"];
  var growToJs = function (g) {
      return {
          id: Data_Nullable.toNullable(g.id), 
          classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(g.classes), 
          source: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.selectToJs)(g.source), 
          scale: g.scale, 
          items: Mathbox_Field.maybeToNullable(Mathbox_Types.anchorToJs)(g.items), 
          width: Mathbox_Field.maybeToNullable(Mathbox_Types.anchorToJs)(g.width), 
          height: Mathbox_Field.maybeToNullable(Mathbox_Types.anchorToJs)(g.height), 
          depth: Mathbox_Field.maybeToNullable(Mathbox_Types.anchorToJs)(g.depth)
      };
  };
  exports["growToJs"] = growToJs;
})(PS["Mathbox.Class.Operator.Grow"] = PS["Mathbox.Class.Operator.Grow"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Mathbox_Field = PS["Mathbox.Field"];
  var Mathbox_Types = PS["Mathbox.Types"];
  var Prelude = PS["Prelude"];
  var joinToJs = function (j) {
      return {
          id: Data_Nullable.toNullable(j.id), 
          classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(j.classes), 
          source: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.selectToJs)(j.source), 
          order: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.transposeToJs)(j.order), 
          axis: Mathbox_Field.maybeToNullable(Mathbox_Types.axisToJs)(j.axis), 
          overlap: j.overlap
      };
  };
  exports["joinToJs"] = joinToJs;
})(PS["Mathbox.Class.Operator.Join"] = PS["Mathbox.Class.Operator.Join"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Mathbox_Field = PS["Mathbox.Field"];
  var Mathbox_Types = PS["Mathbox.Types"];
  var Prelude = PS["Prelude"];
  var lerpToJs = function (l) {
      return {
          id: Data_Nullable.toNullable(l.id), 
          classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(l.classes), 
          source: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.selectToJs)(l.source), 
          size: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.mappingToJs)(l.size), 
          items: Data_Nullable.toNullable(l.items), 
          width: Data_Nullable.toNullable(l.width), 
          height: Data_Nullable.toNullable(l.height), 
          depth: Data_Nullable.toNullable(l.depth), 
          centeredX: l.centeredX, 
          paddingX: l.paddingX, 
          centeredY: l.centeredY, 
          paddingY: l.paddingY, 
          centeredZ: l.centeredZ, 
          paddingZ: l.paddingZ, 
          centeredW: l.centeredW, 
          paddingW: l.paddingW
      };
  };
  exports["lerpToJs"] = lerpToJs;
})(PS["Mathbox.Class.Operator.Lerp"] = PS["Mathbox.Class.Operator.Lerp"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Mathbox_Field = PS["Mathbox.Field"];
  var Mathbox_Types = PS["Mathbox.Types"];
  var Prelude = PS["Prelude"];
  var memoToJs = function (m) {
      return {
          id: Data_Nullable.toNullable(m.id), 
          classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(m.classes), 
          source: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.selectToJs)(m.source), 
          minFilter: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.filterToJs)(m.minFilter), 
          magFilter: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.filterToJs)(m.magFilter), 
          type: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.typeToJs)(m.type)
      };
  };
  exports["memoToJs"] = memoToJs;
})(PS["Mathbox.Class.Operator.Memo"] = PS["Mathbox.Class.Operator.Memo"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Mathbox_Field = PS["Mathbox.Field"];
  var Mathbox_Types = PS["Mathbox.Types"];
  var Prelude = PS["Prelude"];        
  var operatorToJs = function (o) {
      return {
          id: Data_Nullable.toNullable(o.id), 
          classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(o.classes), 
          source: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.selectToJs)(o.source)
      };
  };
  exports["operatorToJs"] = operatorToJs;
})(PS["Mathbox.Class.Operator.Operator"] = PS["Mathbox.Class.Operator.Operator"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Mathbox_Field = PS["Mathbox.Field"];
  var Mathbox_Types = PS["Mathbox.Types"];
  var Prelude = PS["Prelude"];        
  var readbackToJs = function (r) {
      return {
          id: Data_Nullable.toNullable(r.id), 
          classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(r.classes), 
          source: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.selectToJs)(r.source), 
          type: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.typeToJs)(r.type), 
          expr: Data_Nullable.toNullable(r.expr), 
          data: r.data, 
          channels: r.channels, 
          items: Data_Nullable.toNullable(r.items), 
          width: Data_Nullable.toNullable(r.width), 
          height: Data_Nullable.toNullable(r.height), 
          depth: Data_Nullable.toNullable(r.depth), 
          active: r.active
      };
  };
  exports["readbackToJs"] = readbackToJs;
})(PS["Mathbox.Class.Operator.Readback"] = PS["Mathbox.Class.Operator.Readback"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Mathbox_Field = PS["Mathbox.Field"];
  var Mathbox_Types = PS["Mathbox.Types"];
  var Prelude = PS["Prelude"];        
  var repeatToJs = function (r) {
      return {
          id: Data_Nullable.toNullable(r.id), 
          classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(r.classes), 
          source: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.selectToJs)(r.source), 
          items: r.items, 
          width: r.width, 
          height: r.height, 
          depth: r.depth
      };
  };
  exports["repeatToJs"] = repeatToJs;
})(PS["Mathbox.Class.Operator.Repeat"] = PS["Mathbox.Class.Operator.Repeat"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Mathbox_Field = PS["Mathbox.Field"];
  var Mathbox_Types = PS["Mathbox.Types"];
  var Prelude = PS["Prelude"];        
  var resampleToJs = function (r) {
      return {
          id: Data_Nullable.toNullable(r.id), 
          classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(r.classes), 
          source: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.selectToJs)(r.source), 
          indices: r.indices, 
          channels: r.channels, 
          sample: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.mappingToJs)(r.sample), 
          size: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.mappingToJs)(r.size), 
          items: Data_Nullable.toNullable(r.items), 
          width: Data_Nullable.toNullable(r.width), 
          height: Data_Nullable.toNullable(r.height), 
          depth: Data_Nullable.toNullable(r.depth), 
          centeredX: r.centeredX, 
          paddingX: r.paddingX, 
          centeredY: r.centeredY, 
          paddingY: r.paddingY, 
          centeredZ: r.centeredZ, 
          paddingZ: r.paddingZ, 
          centeredW: r.centeredW, 
          paddingW: r.paddingW, 
          shader: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.selectToJs)(r.shader)
      };
  };
  exports["resampleToJs"] = resampleToJs;
})(PS["Mathbox.Class.Operator.Resample"] = PS["Mathbox.Class.Operator.Resample"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Mathbox_Field = PS["Mathbox.Field"];
  var Mathbox_Types = PS["Mathbox.Types"];
  var Prelude = PS["Prelude"];        
  var sliceToJs = function (s) {
      return {
          id: Data_Nullable.toNullable(s.id), 
          classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(s.classes), 
          source: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.selectToJs)(s.source), 
          items: Data_Nullable.toNullable(s.items), 
          width: Data_Nullable.toNullable(s.width), 
          height: Data_Nullable.toNullable(s.height), 
          depth: Data_Nullable.toNullable(s.depth)
      };
  };
  exports["sliceToJs"] = sliceToJs;
})(PS["Mathbox.Class.Operator.Slice"] = PS["Mathbox.Class.Operator.Slice"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Mathbox_Field = PS["Mathbox.Field"];
  var Mathbox_Types = PS["Mathbox.Types"];
  var Prelude = PS["Prelude"];        
  var splitToJs = function (s) {
      return {
          id: Data_Nullable.toNullable(s.id), 
          classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(s.classes), 
          source: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.selectToJs)(s.source), 
          order: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.transposeToJs)(s.order), 
          axis: Mathbox_Field.maybeToNullable(Mathbox_Types.axisToJs)(s.axis), 
          length: s.length, 
          overlap: s.overlap
      };
  };
  exports["splitToJs"] = splitToJs;
})(PS["Mathbox.Class.Operator.Split"] = PS["Mathbox.Class.Operator.Split"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Mathbox_Field = PS["Mathbox.Field"];
  var Mathbox_Types = PS["Mathbox.Types"];
  var Prelude = PS["Prelude"];        
  var spreadToJs = function (s) {
      return {
          id: Data_Nullable.toNullable(s.id), 
          classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(s.classes), 
          source: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.selectToJs)(s.source), 
          unit: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.mappingToJs)(s.unit), 
          items: Data_Nullable.toNullable(s.items), 
          width: Data_Nullable.toNullable(s.width), 
          height: Data_Nullable.toNullable(s.height), 
          depth: Data_Nullable.toNullable(s.depth), 
          alignItems: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.anchorToJs)(s.alignItems), 
          alignWidth: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.anchorToJs)(s.alignWidth), 
          alignHeight: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.anchorToJs)(s.alignHeight), 
          alignDepth: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.anchorToJs)(s.alignDepth)
      };
  };
  exports["spreadToJs"] = spreadToJs;
})(PS["Mathbox.Class.Operator.Spread"] = PS["Mathbox.Class.Operator.Spread"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Mathbox_Field = PS["Mathbox.Field"];
  var Mathbox_Types = PS["Mathbox.Types"];
  var Prelude = PS["Prelude"];        
  var subdivideToJs = function (s) {
      return {
          id: Data_Nullable.toNullable(s.id), 
          classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(s.classes), 
          source: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.selectToJs)(s.source), 
          items: Data_Nullable.toNullable(s.items), 
          width: Data_Nullable.toNullable(s.width), 
          height: Data_Nullable.toNullable(s.height), 
          depth: Data_Nullable.toNullable(s.depth), 
          bevel: s.bevel, 
          lerp: s.lerp
      };
  };
  exports["subdivideToJs"] = subdivideToJs;
})(PS["Mathbox.Class.Operator.Subdivide"] = PS["Mathbox.Class.Operator.Subdivide"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Mathbox_Field = PS["Mathbox.Field"];
  var Mathbox_Types = PS["Mathbox.Types"];
  var Prelude = PS["Prelude"];        
  var swizzleToJs = function (s) {
      return {
          id: Data_Nullable.toNullable(s.id), 
          classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(s.classes), 
          source: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.selectToJs)(s.source), 
          order: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.swizzleToJs)(s.order)
      };
  };
  exports["swizzleToJs"] = swizzleToJs;
})(PS["Mathbox.Class.Operator.Swizzle"] = PS["Mathbox.Class.Operator.Swizzle"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Mathbox_Field = PS["Mathbox.Field"];
  var Mathbox_Types = PS["Mathbox.Types"];
  var Prelude = PS["Prelude"];        
  var transposeToJs = function (t) {
      return {
          id: Data_Nullable.toNullable(t.id), 
          classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(t.classes), 
          source: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.selectToJs)(t.source), 
          order: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.transposeToJs)(t.order)
      };
  };
  exports["transposeToJs"] = transposeToJs;
})(PS["Mathbox.Class.Operator.Transpose"] = PS["Mathbox.Class.Operator.Transpose"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Data_Ring = PS["Data.Ring"];
  var Mathbox_Field = PS["Mathbox.Field"];
  var Mathbox_Types = PS["Mathbox.Types"];
  var Prelude = PS["Prelude"];
  var dOMToJs = function (d) {
      return {
          id: Data_Nullable.toNullable(d.id), 
          classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(d.classes), 
          visible: d.visible, 
          opacity: d.opacity, 
          zIndex: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.roundToJs)(d.zIndex), 
          points: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.selectToJs)(d.points), 
          html: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.selectToJs)(d.html), 
          size: d.size, 
          outline: d.outline, 
          zoom: d.zoom, 
          color: Mathbox_Field.maybeToNullable(Mathbox_Types.colorToJs)(d.color), 
          attributes: Data_Nullable.toNullable(d.attributes), 
          pointerEvents: d.pointerEvents, 
          offset: d.offset, 
          snap: d.snap, 
          depth: d.depth
      };
  };
  exports["dOMToJs"] = dOMToJs;
})(PS["Mathbox.Class.Overlay.DOM"] = PS["Mathbox.Class.Overlay.DOM"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Mathbox_Field = PS["Mathbox.Field"];
  var Mathbox_Types = PS["Mathbox.Types"];
  var Prelude = PS["Prelude"];
  var hTMLToJs = function (h) {
      return {
          id: Data_Nullable.toNullable(h.id), 
          classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(h.classes), 
          items: h.items, 
          fps: Data_Nullable.toNullable(h.fps), 
          hurry: h.hurry, 
          limit: h.limit, 
          realtime: h.realtime, 
          observe: h.observe, 
          aligned: h.aligned, 
          data: Data_Nullable.toNullable(h.data), 
          expr: Data_Nullable.toNullable(h.expr), 
          bind: Data_Nullable.toNullable(h.bind), 
          live: h.live, 
          width: Data_Nullable.toNullable(h.width), 
          height: Data_Nullable.toNullable(h.height), 
          depth: Data_Nullable.toNullable(h.depth), 
          bufferWidth: h.bufferWidth, 
          bufferHeight: h.bufferHeight, 
          bufferDepth: h.bufferDepth
      };
  };
  exports["hTMLToJs"] = hTMLToJs;
})(PS["Mathbox.Class.Overlay.HTML"] = PS["Mathbox.Class.Overlay.HTML"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Mathbox_Field = PS["Mathbox.Field"];
  var Mathbox_Types = PS["Mathbox.Types"];
  var Prelude = PS["Prelude"];        
  var moveToJs = function (m) {
      return {
          id: Data_Nullable.toNullable(m.id), 
          classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(m.classes), 
          stagger: m.stagger, 
          enter: Data_Nullable.toNullable(m.enter), 
          exit: Data_Nullable.toNullable(m.exit), 
          delay: m.delay, 
          delayEnter: Data_Nullable.toNullable(m.delayEnter), 
          delayExit: Data_Nullable.toNullable(m.delayExit), 
          duration: m.duration, 
          durationEnter: Data_Nullable.toNullable(m.durationEnter), 
          durationExit: Data_Nullable.toNullable(m.durationExit), 
          pass: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.vertexPassToJs)(m.pass), 
          from: m.from, 
          to: m.to
      };
  };
  exports["moveToJs"] = moveToJs;
})(PS["Mathbox.Class.Present.Move"] = PS["Mathbox.Class.Present.Move"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Mathbox_Field = PS["Mathbox.Field"];
  var Mathbox_Types = PS["Mathbox.Types"];
  var Prelude = PS["Prelude"];        
  var playToJs = function (p) {
      return {
          id: Data_Nullable.toNullable(p.id), 
          classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(p.classes), 
          target: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.selectToJs)(p.target), 
          script: p.script, 
          ease: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.easeToJs)(p.ease), 
          trigger: Data_Nullable.toNullable(p.trigger), 
          delay: p.delay, 
          pace: p.pace, 
          speed: p.speed, 
          from: p.from, 
          to: p.to, 
          realtime: p.realtime, 
          loop: p.loop
      };
  };
  exports["playToJs"] = playToJs;
})(PS["Mathbox.Class.Present.Play"] = PS["Mathbox.Class.Present.Play"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Mathbox_Field = PS["Mathbox.Field"];
  var Mathbox_Types = PS["Mathbox.Types"];
  var Prelude = PS["Prelude"];        
  var presentToJs = function (p) {
      return {
          id: Data_Nullable.toNullable(p.id), 
          classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(p.classes), 
          index: p.index, 
          directed: p.directed, 
          length: p.length
      };
  };
  exports["presentToJs"] = presentToJs;
})(PS["Mathbox.Class.Present.Present"] = PS["Mathbox.Class.Present.Present"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Mathbox_Field = PS["Mathbox.Field"];
  var Mathbox_Types = PS["Mathbox.Types"];
  var Prelude = PS["Prelude"];        
  var revealToJs = function (r) {
      return {
          id: Data_Nullable.toNullable(r.id), 
          classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(r.classes), 
          stagger: r.stagger, 
          enter: Data_Nullable.toNullable(r.enter), 
          exit: Data_Nullable.toNullable(r.exit), 
          delay: r.delay, 
          delayEnter: Data_Nullable.toNullable(r.delayEnter), 
          delayExit: Data_Nullable.toNullable(r.delayExit), 
          duration: r.duration, 
          durationEnter: Data_Nullable.toNullable(r.durationEnter), 
          durationExit: Data_Nullable.toNullable(r.durationExit)
      };
  };
  exports["revealToJs"] = revealToJs;
})(PS["Mathbox.Class.Present.Reveal"] = PS["Mathbox.Class.Present.Reveal"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Mathbox_Field = PS["Mathbox.Field"];
  var Mathbox_Types = PS["Mathbox.Types"];
  var Prelude = PS["Prelude"];        
  var slideToJs = function (s) {
      return {
          id: Data_Nullable.toNullable(s.id), 
          classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(s.classes), 
          order: Data_Nullable.toNullable(s.order), 
          steps: s.steps, 
          early: s.early, 
          late: s.late, 
          from: Data_Nullable.toNullable(s.from), 
          to: Data_Nullable.toNullable(s.to)
      };
  };
  exports["slideToJs"] = slideToJs;
})(PS["Mathbox.Class.Present.Slide"] = PS["Mathbox.Class.Present.Slide"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Mathbox_Field = PS["Mathbox.Field"];
  var Mathbox_Types = PS["Mathbox.Types"];
  var Prelude = PS["Prelude"];        
  var stepToJs = function (s) {
      return {
          id: Data_Nullable.toNullable(s.id), 
          classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(s.classes), 
          target: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.selectToJs)(s.target), 
          script: s.script, 
          ease: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.easeToJs)(s.ease), 
          playback: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.easeToJs)(s.playback), 
          stops: Data_Nullable.toNullable(s.stops), 
          delay: s.delay, 
          duration: s.duration, 
          pace: s.pace, 
          speed: s.speed, 
          rewind: s.rewind, 
          skip: s.skip, 
          realtime: s.realtime, 
          trigger: Data_Nullable.toNullable(s.trigger)
      };
  };
  exports["stepToJs"] = stepToJs;
})(PS["Mathbox.Class.Present.Step"] = PS["Mathbox.Class.Present.Step"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Mathbox_Field = PS["Mathbox.Field"];
  var Mathbox_Types = PS["Mathbox.Types"];
  var Prelude = PS["Prelude"];        
  var trackToJs = function (t) {
      return {
          id: Data_Nullable.toNullable(t.id), 
          classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(t.classes), 
          target: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.selectToJs)(t.target), 
          script: t.script, 
          ease: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.easeToJs)(t.ease), 
          seek: Data_Nullable.toNullable(t.seek)
      };
  };
  exports["trackToJs"] = trackToJs;
})(PS["Mathbox.Class.Present.Track"] = PS["Mathbox.Class.Present.Track"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Mathbox_Field = PS["Mathbox.Field"];
  var Mathbox_Types = PS["Mathbox.Types"];
  var Prelude = PS["Prelude"];        
  var transitionToJs = function (t) {
      return {
          id: Data_Nullable.toNullable(t.id), 
          classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(t.classes), 
          stagger: t.stagger, 
          enter: Data_Nullable.toNullable(t.enter), 
          exit: Data_Nullable.toNullable(t.exit), 
          delay: t.delay, 
          delayEnter: Data_Nullable.toNullable(t.delayEnter), 
          delayExit: Data_Nullable.toNullable(t.delayExit), 
          duration: t.duration, 
          durationEnter: Data_Nullable.toNullable(t.durationEnter), 
          durationExit: Data_Nullable.toNullable(t.durationExit)
      };
  };
  exports["transitionToJs"] = transitionToJs;
})(PS["Mathbox.Class.Present.Transition"] = PS["Mathbox.Class.Present.Transition"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Mathbox_Field = PS["Mathbox.Field"];
  var Mathbox_Types = PS["Mathbox.Types"];
  var Prelude = PS["Prelude"];
  var composeToJs = function (c) {
      return {
          id: Data_Nullable.toNullable(c.id), 
          classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(c.classes), 
          visible: c.visible, 
          source: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.selectToJs)(c.source), 
          opacity: c.opacity, 
          color: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.colorToJs)(c.color), 
          blending: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.blendingToJs)(c.blending), 
          zWrite: c.zWrite, 
          zTest: c.zTest, 
          zIndex: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.roundToJs)(c.zIndex), 
          zBias: c.zBias, 
          zOrder: Data_Nullable.toNullable(c.zOrder), 
          alpha: c.alpha
      };
  };
  exports["composeToJs"] = composeToJs;
})(PS["Mathbox.Class.Rtt.Compose"] = PS["Mathbox.Class.Rtt.Compose"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Mathbox_Field = PS["Mathbox.Field"];
  var Mathbox_Types = PS["Mathbox.Types"];
  var Prelude = PS["Prelude"];        
  var rTTToJs = function (r) {
      return {
          id: Data_Nullable.toNullable(r.id), 
          classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(r.classes), 
          speed: r.speed, 
          camera: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.selectToJs)(r.camera), 
          pass: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.vertexPassToJs)(r.pass), 
          minFilter: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.filterToJs)(r.minFilter), 
          magFilter: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.filterToJs)(r.magFilter), 
          type: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.typeToJs)(r.type), 
          size: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.mappingToJs)(r.size), 
          width: Data_Nullable.toNullable(r.width), 
          height: Data_Nullable.toNullable(r.height), 
          history: r.history
      };
  };
  exports["rTTToJs"] = rTTToJs;
})(PS["Mathbox.Class.Rtt.RTT"] = PS["Mathbox.Class.Rtt.RTT"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Mathbox_Field = PS["Mathbox.Field"];
  var Mathbox_Types = PS["Mathbox.Types"];
  var Prelude = PS["Prelude"];        
  var shaderToJs = function (s) {
      return {
          id: Data_Nullable.toNullable(s.id), 
          classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(s.classes), 
          sources: Mathbox_Field.maybeToNullable(Mathbox_Types.selectToJs)(s.sources), 
          language: s.language, 
          code: s.code, 
          uniforms: Data_Nullable.toNullable(s.uniforms)
      };
  };
  exports["shaderToJs"] = shaderToJs;
})(PS["Mathbox.Class.Shader.Shader"] = PS["Mathbox.Class.Shader.Shader"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Mathbox_Field = PS["Mathbox.Field"];
  var Mathbox_Types = PS["Mathbox.Types"];
  var Prelude = PS["Prelude"];
  var formatToJs = function (f) {
      return {
          id: Data_Nullable.toNullable(f.id), 
          classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(f.classes), 
          source: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.selectToJs)(f.source), 
          minFilter: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.filterToJs)(f.minFilter), 
          magFilter: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.filterToJs)(f.magFilter), 
          type: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.typeToJs)(f.type), 
          digits: Data_Nullable.toNullable(f.digits), 
          data: Data_Nullable.toNullable(f.data), 
          expr: Data_Nullable.toNullable(f.expr), 
          live: f.live, 
          font: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.fontToJs)(f.font), 
          style: f.style, 
          variant: f.variant, 
          weight: f.weight, 
          detail: f.detail, 
          sdf: f.sdf
      };
  };
  exports["formatToJs"] = formatToJs;
})(PS["Mathbox.Class.Text.Format"] = PS["Mathbox.Class.Text.Format"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Data_Ring = PS["Data.Ring"];
  var Mathbox_Field = PS["Mathbox.Field"];
  var Mathbox_Types = PS["Mathbox.Types"];
  var Prelude = PS["Prelude"];
  var labelToJs = function (l) {
      return {
          id: Data_Nullable.toNullable(l.id), 
          classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(l.classes), 
          visible: l.visible, 
          opacity: l.opacity, 
          color: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.colorToJs)(l.color), 
          blending: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.blendingToJs)(l.blending), 
          zWrite: l.zWrite, 
          zTest: l.zTest, 
          zIndex: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.roundToJs)(l.zIndex), 
          zBias: l.zBias, 
          zOrder: Data_Nullable.toNullable(l.zOrder), 
          text: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.selectToJs)(l.text), 
          size: l.size, 
          outline: l.outline, 
          expand: l.expand, 
          background: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.colorToJs)(l.background), 
          offset: l.offset, 
          snap: l.snap, 
          depth: l.depth, 
          points: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.selectToJs)(l.points), 
          colors: Mathbox_Field.maybeToNullable(Mathbox_Types.selectToJs)(l.colors)
      };
  };
  exports["labelToJs"] = labelToJs;
})(PS["Mathbox.Class.Text.Label"] = PS["Mathbox.Class.Text.Label"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Mathbox_Field = PS["Mathbox.Field"];
  var Mathbox_Types = PS["Mathbox.Types"];
  var Prelude = PS["Prelude"];        
  var retextToJs = function (r) {
      return {
          id: Data_Nullable.toNullable(r.id), 
          classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(r.classes), 
          source: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.selectToJs)(r.source), 
          indices: r.indices, 
          channels: r.channels, 
          sample: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.mappingToJs)(r.sample), 
          size: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.mappingToJs)(r.size), 
          items: Data_Nullable.toNullable(r.items), 
          width: Data_Nullable.toNullable(r.width), 
          height: Data_Nullable.toNullable(r.height), 
          depth: Data_Nullable.toNullable(r.depth), 
          centeredX: r.centeredX, 
          paddingX: r.paddingX, 
          centeredY: r.centeredY, 
          paddingY: r.paddingY, 
          centeredZ: r.centeredZ, 
          paddingZ: r.paddingZ, 
          centeredW: r.centeredW, 
          paddingW: r.paddingW, 
          shader: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.selectToJs)(r.shader)
      };
  };
  exports["retextToJs"] = retextToJs;
})(PS["Mathbox.Class.Text.Retext"] = PS["Mathbox.Class.Text.Retext"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Mathbox_Field = PS["Mathbox.Field"];
  var Mathbox_Types = PS["Mathbox.Types"];
  var Prelude = PS["Prelude"];        
  var textToJs = function (t) {
      return {
          id: Data_Nullable.toNullable(t.id), 
          classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(t.classes), 
          items: t.items, 
          fps: Data_Nullable.toNullable(t.fps), 
          hurry: t.hurry, 
          limit: t.limit, 
          realtime: t.realtime, 
          observe: t.observe, 
          aligned: t.aligned, 
          data: Data_Nullable.toNullable(t.data), 
          expr: Data_Nullable.toNullable(t.expr), 
          bind: Data_Nullable.toNullable(t.bind), 
          live: t.live, 
          minFilter: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.filterToJs)(t.minFilter), 
          magFilter: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.filterToJs)(t.magFilter), 
          type: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.typeToJs)(t.type), 
          width: Data_Nullable.toNullable(t.width), 
          height: Data_Nullable.toNullable(t.height), 
          depth: Data_Nullable.toNullable(t.depth), 
          bufferWidth: t.bufferWidth, 
          bufferHeight: t.bufferHeight, 
          bufferDepth: t.bufferDepth, 
          font: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.fontToJs)(t.font), 
          style: t.style, 
          variant: t.variant, 
          weight: t.weight, 
          detail: t.detail, 
          sdf: t.sdf
      };
  };
  exports["textToJs"] = textToJs;
})(PS["Mathbox.Class.Text.Text"] = PS["Mathbox.Class.Text.Text"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Mathbox_Field = PS["Mathbox.Field"];
  var Mathbox_Types = PS["Mathbox.Types"];
  var Prelude = PS["Prelude"];
  var clockToJs = function (c) {
      return {
          id: Data_Nullable.toNullable(c.id), 
          classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(c.classes), 
          seek: Data_Nullable.toNullable(c.seek), 
          delay: c.delay, 
          pace: c.pace, 
          speed: c.speed, 
          from: c.from, 
          to: c.to, 
          realtime: c.realtime, 
          loop: c.loop
      };
  };
  exports["clockToJs"] = clockToJs;
})(PS["Mathbox.Class.Time.Clock"] = PS["Mathbox.Class.Time.Clock"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Mathbox_Field = PS["Mathbox.Field"];
  var Mathbox_Types = PS["Mathbox.Types"];
  var Prelude = PS["Prelude"];        
  var nowToJs = function (n) {
      return {
          id: Data_Nullable.toNullable(n.id), 
          classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(n.classes), 
          now: Mathbox_Field.maybeToNullable(Mathbox_Types.timestampToJs)(n.now), 
          seek: Data_Nullable.toNullable(n.seek), 
          pace: n.pace, 
          speed: n.speed
      };
  };
  exports["nowToJs"] = nowToJs;
})(PS["Mathbox.Class.Time.Now"] = PS["Mathbox.Class.Time.Now"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Mathbox_Field = PS["Mathbox.Field"];
  var Mathbox_Types = PS["Mathbox.Types"];
  var Prelude = PS["Prelude"];
  var fragmentToJs = function (f) {
      return {
          id: Data_Nullable.toNullable(f.id), 
          classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(f.classes), 
          shader: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.selectToJs)(f.shader), 
          pass: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.fragmentPassToJs)(f.pass), 
          gamma: f.gamma
      };
  };
  exports["fragmentToJs"] = fragmentToJs;
})(PS["Mathbox.Class.Transform.Fragment"] = PS["Mathbox.Class.Transform.Fragment"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Mathbox_Field = PS["Mathbox.Field"];
  var Mathbox_Types = PS["Mathbox.Types"];
  var Prelude = PS["Prelude"];
  var layerToJs = function (l) {
      return {
          id: Data_Nullable.toNullable(l.id), 
          classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(l.classes), 
          pass: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.vertexPassToJs)(l.pass), 
          depth: l.depth, 
          fit: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.fitToJs)(l.fit)
      };
  };
  exports["layerToJs"] = layerToJs;
})(PS["Mathbox.Class.Transform.Layer"] = PS["Mathbox.Class.Transform.Layer"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Mathbox_Field = PS["Mathbox.Field"];
  var Mathbox_Types = PS["Mathbox.Types"];
  var Prelude = PS["Prelude"];
  var maskToJs = function (m) {
      return {
          id: Data_Nullable.toNullable(m.id), 
          classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(m.classes), 
          shader: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.selectToJs)(m.shader)
      };
  };
  exports["maskToJs"] = maskToJs;
})(PS["Mathbox.Class.Transform.Mask"] = PS["Mathbox.Class.Transform.Mask"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Mathbox_Field = PS["Mathbox.Field"];
  var Mathbox_Types = PS["Mathbox.Types"];
  var Prelude = PS["Prelude"];        
  var transformToJs = function (t) {
      return {
          id: Data_Nullable.toNullable(t.id), 
          classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(t.classes), 
          pass: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.vertexPassToJs)(t.pass), 
          gamma: t.gamma
      };
  };
  exports["transformToJs"] = transformToJs;
})(PS["Mathbox.Class.Transform.Transform"] = PS["Mathbox.Class.Transform.Transform"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Mathbox_Field = PS["Mathbox.Field"];
  var Mathbox_Types = PS["Mathbox.Types"];
  var Prelude = PS["Prelude"];        
  var transform3ToJs = function (t) {
      return {
          id: Data_Nullable.toNullable(t.id), 
          classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(t.classes), 
          pass: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.vertexPassToJs)(t.pass), 
          position: t.position, 
          quaternion: t.quaternion, 
          rotation: t.rotation, 
          eulerOrder: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.swizzleToJs)(t.eulerOrder), 
          scale: t.scale, 
          matrix: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.mat4ToJs)(t.matrix)
      };
  };
  exports["transform3ToJs"] = transform3ToJs;
})(PS["Mathbox.Class.Transform.Transform3"] = PS["Mathbox.Class.Transform.Transform3"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Mathbox_Field = PS["Mathbox.Field"];
  var Mathbox_Types = PS["Mathbox.Types"];
  var Prelude = PS["Prelude"];        
  var transform4ToJs = function (t) {
      return {
          id: Data_Nullable.toNullable(t.id), 
          classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(t.classes), 
          pass: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.vertexPassToJs)(t.pass), 
          position: t.position, 
          scale: t.scale, 
          matrix: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.mat4ToJs)(t.matrix)
      };
  };
  exports["transform4ToJs"] = transform4ToJs;
})(PS["Mathbox.Class.Transform.Transform4"] = PS["Mathbox.Class.Transform.Transform4"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Mathbox_Field = PS["Mathbox.Field"];
  var Mathbox_Types = PS["Mathbox.Types"];
  var Prelude = PS["Prelude"];        
  var vertexToJs = function (v) {
      return {
          id: Data_Nullable.toNullable(v.id), 
          classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(v.classes), 
          shader: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.selectToJs)(v.shader), 
          pass: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.vertexPassToJs)(v.pass)
      };
  };
  exports["vertexToJs"] = vertexToJs;
})(PS["Mathbox.Class.Transform.Vertex"] = PS["Mathbox.Class.Transform.Vertex"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Data_Ring = PS["Data.Ring"];
  var Mathbox_Field = PS["Mathbox.Field"];
  var Mathbox_Types = PS["Mathbox.Types"];
  var Prelude = PS["Prelude"];
  var cartesian4ToJs = function (c) {
      return {
          id: Data_Nullable.toNullable(c.id), 
          classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(c.classes), 
          visible: c.visible, 
          range: c.range, 
          position: c.position, 
          scale: c.scale, 
          pass: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.vertexPassToJs)(c.pass)
      };
  };
  exports["cartesian4ToJs"] = cartesian4ToJs;
})(PS["Mathbox.Class.View.Cartesian4"] = PS["Mathbox.Class.View.Cartesian4"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Data_Ring = PS["Data.Ring"];
  var Mathbox_Field = PS["Mathbox.Field"];
  var Mathbox_Types = PS["Mathbox.Types"];
  var Prelude = PS["Prelude"];        
  var polarToJs = function (p) {
      return {
          id: Data_Nullable.toNullable(p.id), 
          classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(p.classes), 
          visible: p.visible, 
          range: p.range, 
          position: p.position, 
          quaternion: p.quaternion, 
          rotation: p.rotation, 
          scale: p.scale, 
          eulerOrder: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.swizzleToJs)(p.eulerOrder), 
          bend: p.bend, 
          helix: p.helix, 
          pass: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.vertexPassToJs)(p.pass)
      };
  };
  exports["polarToJs"] = polarToJs;
})(PS["Mathbox.Class.View.Polar"] = PS["Mathbox.Class.View.Polar"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Data_Ring = PS["Data.Ring"];
  var Mathbox_Field = PS["Mathbox.Field"];
  var Mathbox_Types = PS["Mathbox.Types"];
  var Prelude = PS["Prelude"];        
  var sphericalToJs = function (s) {
      return {
          id: Data_Nullable.toNullable(s.id), 
          classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(s.classes), 
          visible: s.visible, 
          range: s.range, 
          position: s.position, 
          quaternion: s.quaternion, 
          rotation: s.rotation, 
          scale: s.scale, 
          eulerOrder: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.swizzleToJs)(s.eulerOrder), 
          bend: s.bend, 
          pass: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.vertexPassToJs)(s.pass)
      };
  };
  exports["sphericalToJs"] = sphericalToJs;
})(PS["Mathbox.Class.View.Spherical"] = PS["Mathbox.Class.View.Spherical"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Data_Ring = PS["Data.Ring"];
  var Mathbox_Field = PS["Mathbox.Field"];
  var Mathbox_Types = PS["Mathbox.Types"];
  var Prelude = PS["Prelude"];        
  var stereographicToJs = function (s) {
      return {
          id: Data_Nullable.toNullable(s.id), 
          classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(s.classes), 
          visible: s.visible, 
          range: s.range, 
          position: s.position, 
          quaternion: s.quaternion, 
          rotation: s.rotation, 
          scale: s.scale, 
          eulerOrder: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.swizzleToJs)(s.eulerOrder), 
          bend: s.bend, 
          pass: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.vertexPassToJs)(s.pass)
      };
  };
  exports["stereographicToJs"] = stereographicToJs;
})(PS["Mathbox.Class.View.Stereographic"] = PS["Mathbox.Class.View.Stereographic"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Data_Ring = PS["Data.Ring"];
  var Mathbox_Field = PS["Mathbox.Field"];
  var Mathbox_Types = PS["Mathbox.Types"];
  var Prelude = PS["Prelude"];        
  var stereographic4ToJs = function (s) {
      return {
          id: Data_Nullable.toNullable(s.id), 
          classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(s.classes), 
          visible: s.visible, 
          range: s.range, 
          position: s.position, 
          scale: s.scale, 
          bend: s.bend, 
          pass: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.vertexPassToJs)(s.pass)
      };
  };
  exports["stereographic4ToJs"] = stereographic4ToJs;
})(PS["Mathbox.Class.View.Stereographic4"] = PS["Mathbox.Class.View.Stereographic4"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Data_Ring = PS["Data.Ring"];
  var Mathbox_Field = PS["Mathbox.Field"];
  var Mathbox_Types = PS["Mathbox.Types"];
  var Prelude = PS["Prelude"];        
  var viewToJs = function (v) {
      return {
          id: Data_Nullable.toNullable(v.id), 
          classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(v.classes), 
          visible: v.visible, 
          range: v.range, 
          pass: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.vertexPassToJs)(v.pass)
      };
  };
  exports["viewToJs"] = viewToJs;
})(PS["Mathbox.Class.View.View"] = PS["Mathbox.Class.View.View"] || {});
(function(exports) {
    "use strict";

  // module Unsafe.Coerce

  exports.unsafeCoerce = function (x) {
    return x;
  };
})(PS["Unsafe.Coerce"] = PS["Unsafe.Coerce"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Unsafe.Coerce"];
  exports["unsafeCoerce"] = $foreign.unsafeCoerce;
})(PS["Unsafe.Coerce"] = PS["Unsafe.Coerce"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Mathbox.Mathbox"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Functor = PS["Data.Functor"];
  var Data_List = PS["Data.List"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Mathbox_Class_Base_Group = PS["Mathbox.Class.Base.Group"];
  var Mathbox_Class_Base_Inherit = PS["Mathbox.Class.Base.Inherit"];
  var Mathbox_Class_Base_Parent = PS["Mathbox.Class.Base.Parent"];
  var Mathbox_Class_Base_Root = PS["Mathbox.Class.Base.Root"];
  var Mathbox_Class_Base_Source = PS["Mathbox.Class.Base.Source"];
  var Mathbox_Class_Base_Unit = PS["Mathbox.Class.Base.Unit"];
  var Mathbox_Class_Camera_Camera = PS["Mathbox.Class.Camera.Camera"];
  var Mathbox_Class_Data_Area = PS["Mathbox.Class.Data.Area"];
  var Mathbox_Class_Data_Array = PS["Mathbox.Class.Data.Array"];
  var Mathbox_Class_Data_Buffer = PS["Mathbox.Class.Data.Buffer"];
  var Mathbox_Class_Data_Data = PS["Mathbox.Class.Data.Data"];
  var Mathbox_Class_Data_Interval = PS["Mathbox.Class.Data.Interval"];
  var Mathbox_Class_Data_Matrix = PS["Mathbox.Class.Data.Matrix"];
  var Mathbox_Class_Data_Resolve = PS["Mathbox.Class.Data.Resolve"];
  var Mathbox_Class_Data_Scale = PS["Mathbox.Class.Data.Scale"];
  var Mathbox_Class_Data_Volume = PS["Mathbox.Class.Data.Volume"];
  var Mathbox_Class_Data_Voxel = PS["Mathbox.Class.Data.Voxel"];
  var Mathbox_Class_Draw_Axis = PS["Mathbox.Class.Draw.Axis"];
  var Mathbox_Class_Draw_Face = PS["Mathbox.Class.Draw.Face"];
  var Mathbox_Class_Draw_Grid = PS["Mathbox.Class.Draw.Grid"];
  var Mathbox_Class_Draw_Line = PS["Mathbox.Class.Draw.Line"];
  var Mathbox_Class_Draw_Point = PS["Mathbox.Class.Draw.Point"];
  var Mathbox_Class_Draw_Strip = PS["Mathbox.Class.Draw.Strip"];
  var Mathbox_Class_Draw_Surface = PS["Mathbox.Class.Draw.Surface"];
  var Mathbox_Class_Draw_Ticks = PS["Mathbox.Class.Draw.Ticks"];
  var Mathbox_Class_Draw_Vector = PS["Mathbox.Class.Draw.Vector"];
  var Mathbox_Class_Operator_Clamp = PS["Mathbox.Class.Operator.Clamp"];
  var Mathbox_Class_Operator_Grow = PS["Mathbox.Class.Operator.Grow"];
  var Mathbox_Class_Operator_Join = PS["Mathbox.Class.Operator.Join"];
  var Mathbox_Class_Operator_Lerp = PS["Mathbox.Class.Operator.Lerp"];
  var Mathbox_Class_Operator_Memo = PS["Mathbox.Class.Operator.Memo"];
  var Mathbox_Class_Operator_Operator = PS["Mathbox.Class.Operator.Operator"];
  var Mathbox_Class_Operator_Readback = PS["Mathbox.Class.Operator.Readback"];
  var Mathbox_Class_Operator_Repeat = PS["Mathbox.Class.Operator.Repeat"];
  var Mathbox_Class_Operator_Resample = PS["Mathbox.Class.Operator.Resample"];
  var Mathbox_Class_Operator_Slice = PS["Mathbox.Class.Operator.Slice"];
  var Mathbox_Class_Operator_Split = PS["Mathbox.Class.Operator.Split"];
  var Mathbox_Class_Operator_Spread = PS["Mathbox.Class.Operator.Spread"];
  var Mathbox_Class_Operator_Subdivide = PS["Mathbox.Class.Operator.Subdivide"];
  var Mathbox_Class_Operator_Swizzle = PS["Mathbox.Class.Operator.Swizzle"];
  var Mathbox_Class_Operator_Transpose = PS["Mathbox.Class.Operator.Transpose"];
  var Mathbox_Class_Overlay_DOM = PS["Mathbox.Class.Overlay.DOM"];
  var Mathbox_Class_Overlay_HTML = PS["Mathbox.Class.Overlay.HTML"];
  var Mathbox_Class_Present_Move = PS["Mathbox.Class.Present.Move"];
  var Mathbox_Class_Present_Play = PS["Mathbox.Class.Present.Play"];
  var Mathbox_Class_Present_Present = PS["Mathbox.Class.Present.Present"];
  var Mathbox_Class_Present_Reveal = PS["Mathbox.Class.Present.Reveal"];
  var Mathbox_Class_Present_Slide = PS["Mathbox.Class.Present.Slide"];
  var Mathbox_Class_Present_Step = PS["Mathbox.Class.Present.Step"];
  var Mathbox_Class_Present_Track = PS["Mathbox.Class.Present.Track"];
  var Mathbox_Class_Present_Transition = PS["Mathbox.Class.Present.Transition"];
  var Mathbox_Class_Rtt_Compose = PS["Mathbox.Class.Rtt.Compose"];
  var Mathbox_Class_Rtt_RTT = PS["Mathbox.Class.Rtt.RTT"];
  var Mathbox_Class_Shader_Shader = PS["Mathbox.Class.Shader.Shader"];
  var Mathbox_Class_Text_Format = PS["Mathbox.Class.Text.Format"];
  var Mathbox_Class_Text_Label = PS["Mathbox.Class.Text.Label"];
  var Mathbox_Class_Text_Retext = PS["Mathbox.Class.Text.Retext"];
  var Mathbox_Class_Text_Text = PS["Mathbox.Class.Text.Text"];
  var Mathbox_Class_Time_Clock = PS["Mathbox.Class.Time.Clock"];
  var Mathbox_Class_Time_Now = PS["Mathbox.Class.Time.Now"];
  var Mathbox_Class_Transform_Fragment = PS["Mathbox.Class.Transform.Fragment"];
  var Mathbox_Class_Transform_Layer = PS["Mathbox.Class.Transform.Layer"];
  var Mathbox_Class_Transform_Mask = PS["Mathbox.Class.Transform.Mask"];
  var Mathbox_Class_Transform_Transform = PS["Mathbox.Class.Transform.Transform"];
  var Mathbox_Class_Transform_Transform3 = PS["Mathbox.Class.Transform.Transform3"];
  var Mathbox_Class_Transform_Transform4 = PS["Mathbox.Class.Transform.Transform4"];
  var Mathbox_Class_Transform_Vertex = PS["Mathbox.Class.Transform.Vertex"];
  var Mathbox_Class_View_Cartesian = PS["Mathbox.Class.View.Cartesian"];
  var Mathbox_Class_View_Cartesian4 = PS["Mathbox.Class.View.Cartesian4"];
  var Mathbox_Class_View_Polar = PS["Mathbox.Class.View.Polar"];
  var Mathbox_Class_View_Spherical = PS["Mathbox.Class.View.Spherical"];
  var Mathbox_Class_View_Stereographic = PS["Mathbox.Class.View.Stereographic"];
  var Mathbox_Class_View_Stereographic4 = PS["Mathbox.Class.View.Stereographic4"];
  var Mathbox_Class_View_View = PS["Mathbox.Class.View.View"];
  var Mathbox_Classes = PS["Mathbox.Classes"];
  var Mathbox_Field = PS["Mathbox.Field"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];        
  var Area = (function () {
      function Area(value0) {
          this.value0 = value0;
      };
      Area.create = function (value0) {
          return new Area(value0);
      };
      return Area;
  })();
  var Array_ = (function () {
      function Array_(value0) {
          this.value0 = value0;
      };
      Array_.create = function (value0) {
          return new Array_(value0);
      };
      return Array_;
  })();
  var Axis = (function () {
      function Axis(value0) {
          this.value0 = value0;
      };
      Axis.create = function (value0) {
          return new Axis(value0);
      };
      return Axis;
  })();
  var Buffer = (function () {
      function Buffer(value0) {
          this.value0 = value0;
      };
      Buffer.create = function (value0) {
          return new Buffer(value0);
      };
      return Buffer;
  })();
  var Camera = (function () {
      function Camera(value0) {
          this.value0 = value0;
      };
      Camera.create = function (value0) {
          return new Camera(value0);
      };
      return Camera;
  })();
  var Cartesian = (function () {
      function Cartesian(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Cartesian.create = function (value0) {
          return function (value1) {
              return new Cartesian(value0, value1);
          };
      };
      return Cartesian;
  })();
  var Cartesian4 = (function () {
      function Cartesian4(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Cartesian4.create = function (value0) {
          return function (value1) {
              return new Cartesian4(value0, value1);
          };
      };
      return Cartesian4;
  })();
  var Clamp = (function () {
      function Clamp(value0) {
          this.value0 = value0;
      };
      Clamp.create = function (value0) {
          return new Clamp(value0);
      };
      return Clamp;
  })();
  var Clock = (function () {
      function Clock(value0) {
          this.value0 = value0;
      };
      Clock.create = function (value0) {
          return new Clock(value0);
      };
      return Clock;
  })();
  var Compose = (function () {
      function Compose(value0) {
          this.value0 = value0;
      };
      Compose.create = function (value0) {
          return new Compose(value0);
      };
      return Compose;
  })();
  var DOM = (function () {
      function DOM(value0) {
          this.value0 = value0;
      };
      DOM.create = function (value0) {
          return new DOM(value0);
      };
      return DOM;
  })();
  var Data = (function () {
      function Data(value0) {
          this.value0 = value0;
      };
      Data.create = function (value0) {
          return new Data(value0);
      };
      return Data;
  })();
  var Face = (function () {
      function Face(value0) {
          this.value0 = value0;
      };
      Face.create = function (value0) {
          return new Face(value0);
      };
      return Face;
  })();
  var Format = (function () {
      function Format(value0) {
          this.value0 = value0;
      };
      Format.create = function (value0) {
          return new Format(value0);
      };
      return Format;
  })();
  var Fragment = (function () {
      function Fragment(value0) {
          this.value0 = value0;
      };
      Fragment.create = function (value0) {
          return new Fragment(value0);
      };
      return Fragment;
  })();
  var Grid = (function () {
      function Grid(value0) {
          this.value0 = value0;
      };
      Grid.create = function (value0) {
          return new Grid(value0);
      };
      return Grid;
  })();
  var Group = (function () {
      function Group(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Group.create = function (value0) {
          return function (value1) {
              return new Group(value0, value1);
          };
      };
      return Group;
  })();
  var Grow = (function () {
      function Grow(value0) {
          this.value0 = value0;
      };
      Grow.create = function (value0) {
          return new Grow(value0);
      };
      return Grow;
  })();
  var HTML = (function () {
      function HTML(value0) {
          this.value0 = value0;
      };
      HTML.create = function (value0) {
          return new HTML(value0);
      };
      return HTML;
  })();
  var Inherit = (function () {
      function Inherit(value0) {
          this.value0 = value0;
      };
      Inherit.create = function (value0) {
          return new Inherit(value0);
      };
      return Inherit;
  })();
  var Interval = (function () {
      function Interval(value0) {
          this.value0 = value0;
      };
      Interval.create = function (value0) {
          return new Interval(value0);
      };
      return Interval;
  })();
  var Join = (function () {
      function Join(value0) {
          this.value0 = value0;
      };
      Join.create = function (value0) {
          return new Join(value0);
      };
      return Join;
  })();
  var Label = (function () {
      function Label(value0) {
          this.value0 = value0;
      };
      Label.create = function (value0) {
          return new Label(value0);
      };
      return Label;
  })();
  var Layer = (function () {
      function Layer(value0) {
          this.value0 = value0;
      };
      Layer.create = function (value0) {
          return new Layer(value0);
      };
      return Layer;
  })();
  var Lerp = (function () {
      function Lerp(value0) {
          this.value0 = value0;
      };
      Lerp.create = function (value0) {
          return new Lerp(value0);
      };
      return Lerp;
  })();
  var Line = (function () {
      function Line(value0) {
          this.value0 = value0;
      };
      Line.create = function (value0) {
          return new Line(value0);
      };
      return Line;
  })();
  var Mask = (function () {
      function Mask(value0) {
          this.value0 = value0;
      };
      Mask.create = function (value0) {
          return new Mask(value0);
      };
      return Mask;
  })();
  var Matrix = (function () {
      function Matrix(value0) {
          this.value0 = value0;
      };
      Matrix.create = function (value0) {
          return new Matrix(value0);
      };
      return Matrix;
  })();
  var Memo = (function () {
      function Memo(value0) {
          this.value0 = value0;
      };
      Memo.create = function (value0) {
          return new Memo(value0);
      };
      return Memo;
  })();
  var Move = (function () {
      function Move(value0) {
          this.value0 = value0;
      };
      Move.create = function (value0) {
          return new Move(value0);
      };
      return Move;
  })();
  var Now = (function () {
      function Now(value0) {
          this.value0 = value0;
      };
      Now.create = function (value0) {
          return new Now(value0);
      };
      return Now;
  })();
  var Operator = (function () {
      function Operator(value0) {
          this.value0 = value0;
      };
      Operator.create = function (value0) {
          return new Operator(value0);
      };
      return Operator;
  })();
  var Parent = (function () {
      function Parent(value0) {
          this.value0 = value0;
      };
      Parent.create = function (value0) {
          return new Parent(value0);
      };
      return Parent;
  })();
  var Play = (function () {
      function Play(value0) {
          this.value0 = value0;
      };
      Play.create = function (value0) {
          return new Play(value0);
      };
      return Play;
  })();
  var Point = (function () {
      function Point(value0) {
          this.value0 = value0;
      };
      Point.create = function (value0) {
          return new Point(value0);
      };
      return Point;
  })();
  var Polar = (function () {
      function Polar(value0) {
          this.value0 = value0;
      };
      Polar.create = function (value0) {
          return new Polar(value0);
      };
      return Polar;
  })();
  var Present = (function () {
      function Present(value0) {
          this.value0 = value0;
      };
      Present.create = function (value0) {
          return new Present(value0);
      };
      return Present;
  })();
  var RTT = (function () {
      function RTT(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      RTT.create = function (value0) {
          return function (value1) {
              return new RTT(value0, value1);
          };
      };
      return RTT;
  })();
  var Readback = (function () {
      function Readback(value0) {
          this.value0 = value0;
      };
      Readback.create = function (value0) {
          return new Readback(value0);
      };
      return Readback;
  })();
  var Repeat = (function () {
      function Repeat(value0) {
          this.value0 = value0;
      };
      Repeat.create = function (value0) {
          return new Repeat(value0);
      };
      return Repeat;
  })();
  var Resample = (function () {
      function Resample(value0) {
          this.value0 = value0;
      };
      Resample.create = function (value0) {
          return new Resample(value0);
      };
      return Resample;
  })();
  var Resolve = (function () {
      function Resolve(value0) {
          this.value0 = value0;
      };
      Resolve.create = function (value0) {
          return new Resolve(value0);
      };
      return Resolve;
  })();
  var Retext = (function () {
      function Retext(value0) {
          this.value0 = value0;
      };
      Retext.create = function (value0) {
          return new Retext(value0);
      };
      return Retext;
  })();
  var Reveal = (function () {
      function Reveal(value0) {
          this.value0 = value0;
      };
      Reveal.create = function (value0) {
          return new Reveal(value0);
      };
      return Reveal;
  })();
  var Root = (function () {
      function Root(value0) {
          this.value0 = value0;
      };
      Root.create = function (value0) {
          return new Root(value0);
      };
      return Root;
  })();
  var Scale = (function () {
      function Scale(value0) {
          this.value0 = value0;
      };
      Scale.create = function (value0) {
          return new Scale(value0);
      };
      return Scale;
  })();
  var Shader = (function () {
      function Shader(value0) {
          this.value0 = value0;
      };
      Shader.create = function (value0) {
          return new Shader(value0);
      };
      return Shader;
  })();
  var Slice = (function () {
      function Slice(value0) {
          this.value0 = value0;
      };
      Slice.create = function (value0) {
          return new Slice(value0);
      };
      return Slice;
  })();
  var Slide = (function () {
      function Slide(value0) {
          this.value0 = value0;
      };
      Slide.create = function (value0) {
          return new Slide(value0);
      };
      return Slide;
  })();
  var Source = (function () {
      function Source(value0) {
          this.value0 = value0;
      };
      Source.create = function (value0) {
          return new Source(value0);
      };
      return Source;
  })();
  var Spherical = (function () {
      function Spherical(value0) {
          this.value0 = value0;
      };
      Spherical.create = function (value0) {
          return new Spherical(value0);
      };
      return Spherical;
  })();
  var Split = (function () {
      function Split(value0) {
          this.value0 = value0;
      };
      Split.create = function (value0) {
          return new Split(value0);
      };
      return Split;
  })();
  var Spread = (function () {
      function Spread(value0) {
          this.value0 = value0;
      };
      Spread.create = function (value0) {
          return new Spread(value0);
      };
      return Spread;
  })();
  var Step = (function () {
      function Step(value0) {
          this.value0 = value0;
      };
      Step.create = function (value0) {
          return new Step(value0);
      };
      return Step;
  })();
  var Stereographic = (function () {
      function Stereographic(value0) {
          this.value0 = value0;
      };
      Stereographic.create = function (value0) {
          return new Stereographic(value0);
      };
      return Stereographic;
  })();
  var Stereographic4 = (function () {
      function Stereographic4(value0) {
          this.value0 = value0;
      };
      Stereographic4.create = function (value0) {
          return new Stereographic4(value0);
      };
      return Stereographic4;
  })();
  var Strip = (function () {
      function Strip(value0) {
          this.value0 = value0;
      };
      Strip.create = function (value0) {
          return new Strip(value0);
      };
      return Strip;
  })();
  var Subdivide = (function () {
      function Subdivide(value0) {
          this.value0 = value0;
      };
      Subdivide.create = function (value0) {
          return new Subdivide(value0);
      };
      return Subdivide;
  })();
  var Surface = (function () {
      function Surface(value0) {
          this.value0 = value0;
      };
      Surface.create = function (value0) {
          return new Surface(value0);
      };
      return Surface;
  })();
  var Swizzle = (function () {
      function Swizzle(value0) {
          this.value0 = value0;
      };
      Swizzle.create = function (value0) {
          return new Swizzle(value0);
      };
      return Swizzle;
  })();
  var Text = (function () {
      function Text(value0) {
          this.value0 = value0;
      };
      Text.create = function (value0) {
          return new Text(value0);
      };
      return Text;
  })();
  var Ticks = (function () {
      function Ticks(value0) {
          this.value0 = value0;
      };
      Ticks.create = function (value0) {
          return new Ticks(value0);
      };
      return Ticks;
  })();
  var Track = (function () {
      function Track(value0) {
          this.value0 = value0;
      };
      Track.create = function (value0) {
          return new Track(value0);
      };
      return Track;
  })();
  var Transform = (function () {
      function Transform(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Transform.create = function (value0) {
          return function (value1) {
              return new Transform(value0, value1);
          };
      };
      return Transform;
  })();
  var Transform3 = (function () {
      function Transform3(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Transform3.create = function (value0) {
          return function (value1) {
              return new Transform3(value0, value1);
          };
      };
      return Transform3;
  })();
  var Transform4 = (function () {
      function Transform4(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Transform4.create = function (value0) {
          return function (value1) {
              return new Transform4(value0, value1);
          };
      };
      return Transform4;
  })();
  var Transition = (function () {
      function Transition(value0) {
          this.value0 = value0;
      };
      Transition.create = function (value0) {
          return new Transition(value0);
      };
      return Transition;
  })();
  var Transpose = (function () {
      function Transpose(value0) {
          this.value0 = value0;
      };
      Transpose.create = function (value0) {
          return new Transpose(value0);
      };
      return Transpose;
  })();
  var Unit = (function () {
      function Unit(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Unit.create = function (value0) {
          return function (value1) {
              return new Unit(value0, value1);
          };
      };
      return Unit;
  })();
  var Vector = (function () {
      function Vector(value0) {
          this.value0 = value0;
      };
      Vector.create = function (value0) {
          return new Vector(value0);
      };
      return Vector;
  })();
  var Vertex = (function () {
      function Vertex(value0) {
          this.value0 = value0;
      };
      Vertex.create = function (value0) {
          return new Vertex(value0);
      };
      return Vertex;
  })();
  var View = (function () {
      function View(value0) {
          this.value0 = value0;
      };
      View.create = function (value0) {
          return new View(value0);
      };
      return View;
  })();
  var Volume = (function () {
      function Volume(value0) {
          this.value0 = value0;
      };
      Volume.create = function (value0) {
          return new Volume(value0);
      };
      return Volume;
  })();
  var Voxel = (function () {
      function Voxel(value0) {
          this.value0 = value0;
      };
      Voxel.create = function (value0) {
          return new Voxel(value0);
      };
      return Voxel;
  })();
  var JsArea = (function () {
      function JsArea(value0) {
          this.value0 = value0;
      };
      JsArea.create = function (value0) {
          return new JsArea(value0);
      };
      return JsArea;
  })();
  var JsArray_ = (function () {
      function JsArray_(value0) {
          this.value0 = value0;
      };
      JsArray_.create = function (value0) {
          return new JsArray_(value0);
      };
      return JsArray_;
  })();
  var JsAxis = (function () {
      function JsAxis(value0) {
          this.value0 = value0;
      };
      JsAxis.create = function (value0) {
          return new JsAxis(value0);
      };
      return JsAxis;
  })();
  var JsBuffer = (function () {
      function JsBuffer(value0) {
          this.value0 = value0;
      };
      JsBuffer.create = function (value0) {
          return new JsBuffer(value0);
      };
      return JsBuffer;
  })();
  var JsCamera = (function () {
      function JsCamera(value0) {
          this.value0 = value0;
      };
      JsCamera.create = function (value0) {
          return new JsCamera(value0);
      };
      return JsCamera;
  })();
  var JsCartesian = (function () {
      function JsCartesian(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      JsCartesian.create = function (value0) {
          return function (value1) {
              return new JsCartesian(value0, value1);
          };
      };
      return JsCartesian;
  })();
  var JsCartesian4 = (function () {
      function JsCartesian4(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      JsCartesian4.create = function (value0) {
          return function (value1) {
              return new JsCartesian4(value0, value1);
          };
      };
      return JsCartesian4;
  })();
  var JsClamp = (function () {
      function JsClamp(value0) {
          this.value0 = value0;
      };
      JsClamp.create = function (value0) {
          return new JsClamp(value0);
      };
      return JsClamp;
  })();
  var JsClock = (function () {
      function JsClock(value0) {
          this.value0 = value0;
      };
      JsClock.create = function (value0) {
          return new JsClock(value0);
      };
      return JsClock;
  })();
  var JsCompose = (function () {
      function JsCompose(value0) {
          this.value0 = value0;
      };
      JsCompose.create = function (value0) {
          return new JsCompose(value0);
      };
      return JsCompose;
  })();
  var JsDOM = (function () {
      function JsDOM(value0) {
          this.value0 = value0;
      };
      JsDOM.create = function (value0) {
          return new JsDOM(value0);
      };
      return JsDOM;
  })();
  var JsData = (function () {
      function JsData(value0) {
          this.value0 = value0;
      };
      JsData.create = function (value0) {
          return new JsData(value0);
      };
      return JsData;
  })();
  var JsFace = (function () {
      function JsFace(value0) {
          this.value0 = value0;
      };
      JsFace.create = function (value0) {
          return new JsFace(value0);
      };
      return JsFace;
  })();
  var JsFormat = (function () {
      function JsFormat(value0) {
          this.value0 = value0;
      };
      JsFormat.create = function (value0) {
          return new JsFormat(value0);
      };
      return JsFormat;
  })();
  var JsFragment = (function () {
      function JsFragment(value0) {
          this.value0 = value0;
      };
      JsFragment.create = function (value0) {
          return new JsFragment(value0);
      };
      return JsFragment;
  })();
  var JsGrid = (function () {
      function JsGrid(value0) {
          this.value0 = value0;
      };
      JsGrid.create = function (value0) {
          return new JsGrid(value0);
      };
      return JsGrid;
  })();
  var JsGroup = (function () {
      function JsGroup(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      JsGroup.create = function (value0) {
          return function (value1) {
              return new JsGroup(value0, value1);
          };
      };
      return JsGroup;
  })();
  var JsGrow = (function () {
      function JsGrow(value0) {
          this.value0 = value0;
      };
      JsGrow.create = function (value0) {
          return new JsGrow(value0);
      };
      return JsGrow;
  })();
  var JsHTML = (function () {
      function JsHTML(value0) {
          this.value0 = value0;
      };
      JsHTML.create = function (value0) {
          return new JsHTML(value0);
      };
      return JsHTML;
  })();
  var JsInherit = (function () {
      function JsInherit(value0) {
          this.value0 = value0;
      };
      JsInherit.create = function (value0) {
          return new JsInherit(value0);
      };
      return JsInherit;
  })();
  var JsInterval = (function () {
      function JsInterval(value0) {
          this.value0 = value0;
      };
      JsInterval.create = function (value0) {
          return new JsInterval(value0);
      };
      return JsInterval;
  })();
  var JsJoin = (function () {
      function JsJoin(value0) {
          this.value0 = value0;
      };
      JsJoin.create = function (value0) {
          return new JsJoin(value0);
      };
      return JsJoin;
  })();
  var JsLabel = (function () {
      function JsLabel(value0) {
          this.value0 = value0;
      };
      JsLabel.create = function (value0) {
          return new JsLabel(value0);
      };
      return JsLabel;
  })();
  var JsLayer = (function () {
      function JsLayer(value0) {
          this.value0 = value0;
      };
      JsLayer.create = function (value0) {
          return new JsLayer(value0);
      };
      return JsLayer;
  })();
  var JsLerp = (function () {
      function JsLerp(value0) {
          this.value0 = value0;
      };
      JsLerp.create = function (value0) {
          return new JsLerp(value0);
      };
      return JsLerp;
  })();
  var JsLine = (function () {
      function JsLine(value0) {
          this.value0 = value0;
      };
      JsLine.create = function (value0) {
          return new JsLine(value0);
      };
      return JsLine;
  })();
  var JsMask = (function () {
      function JsMask(value0) {
          this.value0 = value0;
      };
      JsMask.create = function (value0) {
          return new JsMask(value0);
      };
      return JsMask;
  })();
  var JsMatrix = (function () {
      function JsMatrix(value0) {
          this.value0 = value0;
      };
      JsMatrix.create = function (value0) {
          return new JsMatrix(value0);
      };
      return JsMatrix;
  })();
  var JsMemo = (function () {
      function JsMemo(value0) {
          this.value0 = value0;
      };
      JsMemo.create = function (value0) {
          return new JsMemo(value0);
      };
      return JsMemo;
  })();
  var JsMove = (function () {
      function JsMove(value0) {
          this.value0 = value0;
      };
      JsMove.create = function (value0) {
          return new JsMove(value0);
      };
      return JsMove;
  })();
  var JsNow = (function () {
      function JsNow(value0) {
          this.value0 = value0;
      };
      JsNow.create = function (value0) {
          return new JsNow(value0);
      };
      return JsNow;
  })();
  var JsOperator = (function () {
      function JsOperator(value0) {
          this.value0 = value0;
      };
      JsOperator.create = function (value0) {
          return new JsOperator(value0);
      };
      return JsOperator;
  })();
  var JsParent = (function () {
      function JsParent(value0) {
          this.value0 = value0;
      };
      JsParent.create = function (value0) {
          return new JsParent(value0);
      };
      return JsParent;
  })();
  var JsPlay = (function () {
      function JsPlay(value0) {
          this.value0 = value0;
      };
      JsPlay.create = function (value0) {
          return new JsPlay(value0);
      };
      return JsPlay;
  })();
  var JsPoint = (function () {
      function JsPoint(value0) {
          this.value0 = value0;
      };
      JsPoint.create = function (value0) {
          return new JsPoint(value0);
      };
      return JsPoint;
  })();
  var JsPolar = (function () {
      function JsPolar(value0) {
          this.value0 = value0;
      };
      JsPolar.create = function (value0) {
          return new JsPolar(value0);
      };
      return JsPolar;
  })();
  var JsPresent = (function () {
      function JsPresent(value0) {
          this.value0 = value0;
      };
      JsPresent.create = function (value0) {
          return new JsPresent(value0);
      };
      return JsPresent;
  })();
  var JsRTT = (function () {
      function JsRTT(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      JsRTT.create = function (value0) {
          return function (value1) {
              return new JsRTT(value0, value1);
          };
      };
      return JsRTT;
  })();
  var JsReadback = (function () {
      function JsReadback(value0) {
          this.value0 = value0;
      };
      JsReadback.create = function (value0) {
          return new JsReadback(value0);
      };
      return JsReadback;
  })();
  var JsRepeat = (function () {
      function JsRepeat(value0) {
          this.value0 = value0;
      };
      JsRepeat.create = function (value0) {
          return new JsRepeat(value0);
      };
      return JsRepeat;
  })();
  var JsResample = (function () {
      function JsResample(value0) {
          this.value0 = value0;
      };
      JsResample.create = function (value0) {
          return new JsResample(value0);
      };
      return JsResample;
  })();
  var JsResolve = (function () {
      function JsResolve(value0) {
          this.value0 = value0;
      };
      JsResolve.create = function (value0) {
          return new JsResolve(value0);
      };
      return JsResolve;
  })();
  var JsRetext = (function () {
      function JsRetext(value0) {
          this.value0 = value0;
      };
      JsRetext.create = function (value0) {
          return new JsRetext(value0);
      };
      return JsRetext;
  })();
  var JsReveal = (function () {
      function JsReveal(value0) {
          this.value0 = value0;
      };
      JsReveal.create = function (value0) {
          return new JsReveal(value0);
      };
      return JsReveal;
  })();
  var JsRoot = (function () {
      function JsRoot(value0) {
          this.value0 = value0;
      };
      JsRoot.create = function (value0) {
          return new JsRoot(value0);
      };
      return JsRoot;
  })();
  var JsScale = (function () {
      function JsScale(value0) {
          this.value0 = value0;
      };
      JsScale.create = function (value0) {
          return new JsScale(value0);
      };
      return JsScale;
  })();
  var JsShader = (function () {
      function JsShader(value0) {
          this.value0 = value0;
      };
      JsShader.create = function (value0) {
          return new JsShader(value0);
      };
      return JsShader;
  })();
  var JsSlice = (function () {
      function JsSlice(value0) {
          this.value0 = value0;
      };
      JsSlice.create = function (value0) {
          return new JsSlice(value0);
      };
      return JsSlice;
  })();
  var JsSlide = (function () {
      function JsSlide(value0) {
          this.value0 = value0;
      };
      JsSlide.create = function (value0) {
          return new JsSlide(value0);
      };
      return JsSlide;
  })();
  var JsSource = (function () {
      function JsSource(value0) {
          this.value0 = value0;
      };
      JsSource.create = function (value0) {
          return new JsSource(value0);
      };
      return JsSource;
  })();
  var JsSpherical = (function () {
      function JsSpherical(value0) {
          this.value0 = value0;
      };
      JsSpherical.create = function (value0) {
          return new JsSpherical(value0);
      };
      return JsSpherical;
  })();
  var JsSplit = (function () {
      function JsSplit(value0) {
          this.value0 = value0;
      };
      JsSplit.create = function (value0) {
          return new JsSplit(value0);
      };
      return JsSplit;
  })();
  var JsSpread = (function () {
      function JsSpread(value0) {
          this.value0 = value0;
      };
      JsSpread.create = function (value0) {
          return new JsSpread(value0);
      };
      return JsSpread;
  })();
  var JsStep = (function () {
      function JsStep(value0) {
          this.value0 = value0;
      };
      JsStep.create = function (value0) {
          return new JsStep(value0);
      };
      return JsStep;
  })();
  var JsStereographic = (function () {
      function JsStereographic(value0) {
          this.value0 = value0;
      };
      JsStereographic.create = function (value0) {
          return new JsStereographic(value0);
      };
      return JsStereographic;
  })();
  var JsStereographic4 = (function () {
      function JsStereographic4(value0) {
          this.value0 = value0;
      };
      JsStereographic4.create = function (value0) {
          return new JsStereographic4(value0);
      };
      return JsStereographic4;
  })();
  var JsStrip = (function () {
      function JsStrip(value0) {
          this.value0 = value0;
      };
      JsStrip.create = function (value0) {
          return new JsStrip(value0);
      };
      return JsStrip;
  })();
  var JsSubdivide = (function () {
      function JsSubdivide(value0) {
          this.value0 = value0;
      };
      JsSubdivide.create = function (value0) {
          return new JsSubdivide(value0);
      };
      return JsSubdivide;
  })();
  var JsSurface = (function () {
      function JsSurface(value0) {
          this.value0 = value0;
      };
      JsSurface.create = function (value0) {
          return new JsSurface(value0);
      };
      return JsSurface;
  })();
  var JsSwizzle = (function () {
      function JsSwizzle(value0) {
          this.value0 = value0;
      };
      JsSwizzle.create = function (value0) {
          return new JsSwizzle(value0);
      };
      return JsSwizzle;
  })();
  var JsText = (function () {
      function JsText(value0) {
          this.value0 = value0;
      };
      JsText.create = function (value0) {
          return new JsText(value0);
      };
      return JsText;
  })();
  var JsTicks = (function () {
      function JsTicks(value0) {
          this.value0 = value0;
      };
      JsTicks.create = function (value0) {
          return new JsTicks(value0);
      };
      return JsTicks;
  })();
  var JsTrack = (function () {
      function JsTrack(value0) {
          this.value0 = value0;
      };
      JsTrack.create = function (value0) {
          return new JsTrack(value0);
      };
      return JsTrack;
  })();
  var JsTransform = (function () {
      function JsTransform(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      JsTransform.create = function (value0) {
          return function (value1) {
              return new JsTransform(value0, value1);
          };
      };
      return JsTransform;
  })();
  var JsTransform3 = (function () {
      function JsTransform3(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      JsTransform3.create = function (value0) {
          return function (value1) {
              return new JsTransform3(value0, value1);
          };
      };
      return JsTransform3;
  })();
  var JsTransform4 = (function () {
      function JsTransform4(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      JsTransform4.create = function (value0) {
          return function (value1) {
              return new JsTransform4(value0, value1);
          };
      };
      return JsTransform4;
  })();
  var JsTransition = (function () {
      function JsTransition(value0) {
          this.value0 = value0;
      };
      JsTransition.create = function (value0) {
          return new JsTransition(value0);
      };
      return JsTransition;
  })();
  var JsTranspose = (function () {
      function JsTranspose(value0) {
          this.value0 = value0;
      };
      JsTranspose.create = function (value0) {
          return new JsTranspose(value0);
      };
      return JsTranspose;
  })();
  var JsUnit = (function () {
      function JsUnit(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      JsUnit.create = function (value0) {
          return function (value1) {
              return new JsUnit(value0, value1);
          };
      };
      return JsUnit;
  })();
  var JsVector = (function () {
      function JsVector(value0) {
          this.value0 = value0;
      };
      JsVector.create = function (value0) {
          return new JsVector(value0);
      };
      return JsVector;
  })();
  var JsVertex = (function () {
      function JsVertex(value0) {
          this.value0 = value0;
      };
      JsVertex.create = function (value0) {
          return new JsVertex(value0);
      };
      return JsVertex;
  })();
  var JsView = (function () {
      function JsView(value0) {
          this.value0 = value0;
      };
      JsView.create = function (value0) {
          return new JsView(value0);
      };
      return JsView;
  })();
  var JsVolume = (function () {
      function JsVolume(value0) {
          this.value0 = value0;
      };
      JsVolume.create = function (value0) {
          return new JsVolume(value0);
      };
      return JsVolume;
  })();
  var JsVoxel = (function () {
      function JsVoxel(value0) {
          this.value0 = value0;
      };
      JsVoxel.create = function (value0) {
          return new JsVoxel(value0);
      };
      return JsVoxel;
  })();
  var unsafeMkThreeColor = Unsafe_Coerce.unsafeCoerce;
  var toJs = function (v) {
      if (v instanceof Area) {
          return new JsArea(Mathbox_Class_Data_Area.areaToJs(v.value0));
      };
      if (v instanceof Array_) {
          return new JsArray_(Mathbox_Class_Data_Array.array_ToJs(v.value0));
      };
      if (v instanceof Axis) {
          return new JsAxis(Mathbox_Class_Draw_Axis.axisToJs(v.value0));
      };
      if (v instanceof Buffer) {
          return new JsBuffer(Mathbox_Class_Data_Buffer.bufferToJs(v.value0));
      };
      if (v instanceof Camera) {
          return new JsCamera(Mathbox_Class_Camera_Camera.cameraToJs(v.value0));
      };
      if (v instanceof Cartesian) {
          return new JsCartesian(Mathbox_Class_View_Cartesian.cartesianToJs(v.value0), Data_Functor.map(Data_List_Types.functorList)(toJs)(v.value1));
      };
      if (v instanceof Cartesian4) {
          return new JsCartesian4(Mathbox_Class_View_Cartesian4.cartesian4ToJs(v.value0), Data_Functor.map(Data_List_Types.functorList)(toJs)(v.value1));
      };
      if (v instanceof Clamp) {
          return new JsClamp(Mathbox_Class_Operator_Clamp.clampToJs(v.value0));
      };
      if (v instanceof Clock) {
          return new JsClock(Mathbox_Class_Time_Clock.clockToJs(v.value0));
      };
      if (v instanceof Compose) {
          return new JsCompose(Mathbox_Class_Rtt_Compose.composeToJs(v.value0));
      };
      if (v instanceof DOM) {
          return new JsDOM(Mathbox_Class_Overlay_DOM.dOMToJs(v.value0));
      };
      if (v instanceof Data) {
          return new JsData(Mathbox_Class_Data_Data.dataToJs(v.value0));
      };
      if (v instanceof Face) {
          return new JsFace(Mathbox_Class_Draw_Face.faceToJs(v.value0));
      };
      if (v instanceof Format) {
          return new JsFormat(Mathbox_Class_Text_Format.formatToJs(v.value0));
      };
      if (v instanceof Fragment) {
          return new JsFragment(Mathbox_Class_Transform_Fragment.fragmentToJs(v.value0));
      };
      if (v instanceof Grid) {
          return new JsGrid(Mathbox_Class_Draw_Grid.gridToJs(v.value0));
      };
      if (v instanceof Group) {
          return new JsGroup(Mathbox_Class_Base_Group.groupToJs(v.value0), Data_Functor.map(Data_List_Types.functorList)(toJs)(v.value1));
      };
      if (v instanceof Grow) {
          return new JsGrow(Mathbox_Class_Operator_Grow.growToJs(v.value0));
      };
      if (v instanceof HTML) {
          return new JsHTML(Mathbox_Class_Overlay_HTML.hTMLToJs(v.value0));
      };
      if (v instanceof Inherit) {
          return new JsInherit(Mathbox_Class_Base_Inherit.inheritToJs(v.value0));
      };
      if (v instanceof Interval) {
          return new JsInterval(Mathbox_Class_Data_Interval.intervalToJs(v.value0));
      };
      if (v instanceof Join) {
          return new JsJoin(Mathbox_Class_Operator_Join.joinToJs(v.value0));
      };
      if (v instanceof Label) {
          return new JsLabel(Mathbox_Class_Text_Label.labelToJs(v.value0));
      };
      if (v instanceof Layer) {
          return new JsLayer(Mathbox_Class_Transform_Layer.layerToJs(v.value0));
      };
      if (v instanceof Lerp) {
          return new JsLerp(Mathbox_Class_Operator_Lerp.lerpToJs(v.value0));
      };
      if (v instanceof Line) {
          return new JsLine(Mathbox_Class_Draw_Line.lineToJs(v.value0));
      };
      if (v instanceof Mask) {
          return new JsMask(Mathbox_Class_Transform_Mask.maskToJs(v.value0));
      };
      if (v instanceof Matrix) {
          return new JsMatrix(Mathbox_Class_Data_Matrix.matrixToJs(v.value0));
      };
      if (v instanceof Memo) {
          return new JsMemo(Mathbox_Class_Operator_Memo.memoToJs(v.value0));
      };
      if (v instanceof Move) {
          return new JsMove(Mathbox_Class_Present_Move.moveToJs(v.value0));
      };
      if (v instanceof Now) {
          return new JsNow(Mathbox_Class_Time_Now.nowToJs(v.value0));
      };
      if (v instanceof Operator) {
          return new JsOperator(Mathbox_Class_Operator_Operator.operatorToJs(v.value0));
      };
      if (v instanceof Parent) {
          return new JsParent(Mathbox_Class_Base_Parent.parentToJs(v.value0));
      };
      if (v instanceof Play) {
          return new JsPlay(Mathbox_Class_Present_Play.playToJs(v.value0));
      };
      if (v instanceof Point) {
          return new JsPoint(Mathbox_Class_Draw_Point.pointToJs(v.value0));
      };
      if (v instanceof Polar) {
          return new JsPolar(Mathbox_Class_View_Polar.polarToJs(v.value0));
      };
      if (v instanceof Present) {
          return new JsPresent(Mathbox_Class_Present_Present.presentToJs(v.value0));
      };
      if (v instanceof RTT) {
          return new JsRTT(Mathbox_Class_Rtt_RTT.rTTToJs(v.value0), Data_Functor.map(Data_List_Types.functorList)(toJs)(v.value1));
      };
      if (v instanceof Readback) {
          return new JsReadback(Mathbox_Class_Operator_Readback.readbackToJs(v.value0));
      };
      if (v instanceof Repeat) {
          return new JsRepeat(Mathbox_Class_Operator_Repeat.repeatToJs(v.value0));
      };
      if (v instanceof Resample) {
          return new JsResample(Mathbox_Class_Operator_Resample.resampleToJs(v.value0));
      };
      if (v instanceof Resolve) {
          return new JsResolve(Mathbox_Class_Data_Resolve.resolveToJs(v.value0));
      };
      if (v instanceof Retext) {
          return new JsRetext(Mathbox_Class_Text_Retext.retextToJs(v.value0));
      };
      if (v instanceof Reveal) {
          return new JsReveal(Mathbox_Class_Present_Reveal.revealToJs(v.value0));
      };
      if (v instanceof Root) {
          return new JsRoot(Mathbox_Class_Base_Root.rootToJs(v.value0));
      };
      if (v instanceof Scale) {
          return new JsScale(Mathbox_Class_Data_Scale.scaleToJs(v.value0));
      };
      if (v instanceof Shader) {
          return new JsShader(Mathbox_Class_Shader_Shader.shaderToJs(v.value0));
      };
      if (v instanceof Slice) {
          return new JsSlice(Mathbox_Class_Operator_Slice.sliceToJs(v.value0));
      };
      if (v instanceof Slide) {
          return new JsSlide(Mathbox_Class_Present_Slide.slideToJs(v.value0));
      };
      if (v instanceof Source) {
          return new JsSource(Mathbox_Class_Base_Source.sourceToJs(v.value0));
      };
      if (v instanceof Spherical) {
          return new JsSpherical(Mathbox_Class_View_Spherical.sphericalToJs(v.value0));
      };
      if (v instanceof Split) {
          return new JsSplit(Mathbox_Class_Operator_Split.splitToJs(v.value0));
      };
      if (v instanceof Spread) {
          return new JsSpread(Mathbox_Class_Operator_Spread.spreadToJs(v.value0));
      };
      if (v instanceof Step) {
          return new JsStep(Mathbox_Class_Present_Step.stepToJs(v.value0));
      };
      if (v instanceof Stereographic) {
          return new JsStereographic(Mathbox_Class_View_Stereographic.stereographicToJs(v.value0));
      };
      if (v instanceof Stereographic4) {
          return new JsStereographic4(Mathbox_Class_View_Stereographic4.stereographic4ToJs(v.value0));
      };
      if (v instanceof Strip) {
          return new JsStrip(Mathbox_Class_Draw_Strip.stripToJs(v.value0));
      };
      if (v instanceof Subdivide) {
          return new JsSubdivide(Mathbox_Class_Operator_Subdivide.subdivideToJs(v.value0));
      };
      if (v instanceof Surface) {
          return new JsSurface(Mathbox_Class_Draw_Surface.surfaceToJs(v.value0));
      };
      if (v instanceof Swizzle) {
          return new JsSwizzle(Mathbox_Class_Operator_Swizzle.swizzleToJs(v.value0));
      };
      if (v instanceof Text) {
          return new JsText(Mathbox_Class_Text_Text.textToJs(v.value0));
      };
      if (v instanceof Ticks) {
          return new JsTicks(Mathbox_Class_Draw_Ticks.ticksToJs(v.value0));
      };
      if (v instanceof Track) {
          return new JsTrack(Mathbox_Class_Present_Track.trackToJs(v.value0));
      };
      if (v instanceof Transform) {
          return new JsTransform(Mathbox_Class_Transform_Transform.transformToJs(v.value0), Data_Functor.map(Data_List_Types.functorList)(toJs)(v.value1));
      };
      if (v instanceof Transform3) {
          return new JsTransform3(Mathbox_Class_Transform_Transform3.transform3ToJs(v.value0), Data_Functor.map(Data_List_Types.functorList)(toJs)(v.value1));
      };
      if (v instanceof Transform4) {
          return new JsTransform4(Mathbox_Class_Transform_Transform4.transform4ToJs(v.value0), Data_Functor.map(Data_List_Types.functorList)(toJs)(v.value1));
      };
      if (v instanceof Transition) {
          return new JsTransition(Mathbox_Class_Present_Transition.transitionToJs(v.value0));
      };
      if (v instanceof Transpose) {
          return new JsTranspose(Mathbox_Class_Operator_Transpose.transposeToJs(v.value0));
      };
      if (v instanceof Unit) {
          return new JsUnit(Mathbox_Class_Base_Unit.unitToJs(v.value0), Data_Functor.map(Data_List_Types.functorList)(toJs)(v.value1));
      };
      if (v instanceof Vector) {
          return new JsVector(Mathbox_Class_Draw_Vector.vectorToJs(v.value0));
      };
      if (v instanceof Vertex) {
          return new JsVertex(Mathbox_Class_Transform_Vertex.vertexToJs(v.value0));
      };
      if (v instanceof View) {
          return new JsView(Mathbox_Class_View_View.viewToJs(v.value0));
      };
      if (v instanceof Volume) {
          return new JsVolume(Mathbox_Class_Data_Volume.volumeToJs(v.value0));
      };
      if (v instanceof Voxel) {
          return new JsVoxel(Mathbox_Class_Data_Voxel.voxelToJs(v.value0));
      };
      throw new Error("Failed pattern match at Mathbox.Mathbox line 307, column 1 - line 307, column 47: " + [ v.constructor.name ]);
  };
  var subData = function (v) {
      if (v instanceof JsCartesian) {
          return v.value1;
      };
      if (v instanceof JsCartesian4) {
          return v.value1;
      };
      if (v instanceof JsGroup) {
          return v.value1;
      };
      if (v instanceof JsRTT) {
          return v.value1;
      };
      if (v instanceof JsTransform) {
          return v.value1;
      };
      if (v instanceof JsTransform3) {
          return v.value1;
      };
      if (v instanceof JsTransform4) {
          return v.value1;
      };
      if (v instanceof JsUnit) {
          return v.value1;
      };
      return Data_List_Types.Nil.value;
  };
  var setToNullable = function (s) {
      return {
          focus: Data_Nullable.toNullable(s.focus), 
          scale: Data_Nullable.toNullable(s.scale)
      };
  };
  var set = function (s) {
      return function (m) {
          return $foreign.jsSet_k(m)(setToNullable(s));
      };
  };
  var isLeaf = function (d) {
      return Data_List["null"](subData(d));
  };
  var getType = function (v) {
      if (v instanceof JsArea) {
          return "area";
      };
      if (v instanceof JsArray_) {
          return "array";
      };
      if (v instanceof JsAxis) {
          return "axis";
      };
      if (v instanceof JsBuffer) {
          return "buffer";
      };
      if (v instanceof JsCamera) {
          return "camera";
      };
      if (v instanceof JsCartesian) {
          return "cartesian";
      };
      if (v instanceof JsCartesian4) {
          return "cartesian4";
      };
      if (v instanceof JsClamp) {
          return "clamp";
      };
      if (v instanceof JsClock) {
          return "clock";
      };
      if (v instanceof JsCompose) {
          return "compose";
      };
      if (v instanceof JsDOM) {
          return "dom";
      };
      if (v instanceof JsData) {
          return "data";
      };
      if (v instanceof JsFace) {
          return "face";
      };
      if (v instanceof JsFormat) {
          return "format";
      };
      if (v instanceof JsFragment) {
          return "fragment";
      };
      if (v instanceof JsGrid) {
          return "grid";
      };
      if (v instanceof JsGroup) {
          return "group";
      };
      if (v instanceof JsGrow) {
          return "grow";
      };
      if (v instanceof JsHTML) {
          return "html";
      };
      if (v instanceof JsInherit) {
          return "inherit";
      };
      if (v instanceof JsInterval) {
          return "interval";
      };
      if (v instanceof JsJoin) {
          return "join";
      };
      if (v instanceof JsLabel) {
          return "label";
      };
      if (v instanceof JsLayer) {
          return "layer";
      };
      if (v instanceof JsLerp) {
          return "lerp";
      };
      if (v instanceof JsLine) {
          return "line";
      };
      if (v instanceof JsMask) {
          return "mask";
      };
      if (v instanceof JsMatrix) {
          return "matrix";
      };
      if (v instanceof JsMemo) {
          return "memo";
      };
      if (v instanceof JsMove) {
          return "move";
      };
      if (v instanceof JsNow) {
          return "now";
      };
      if (v instanceof JsOperator) {
          return "operator";
      };
      if (v instanceof JsParent) {
          return "parent";
      };
      if (v instanceof JsPlay) {
          return "play";
      };
      if (v instanceof JsPoint) {
          return "point";
      };
      if (v instanceof JsPolar) {
          return "polar";
      };
      if (v instanceof JsPresent) {
          return "present";
      };
      if (v instanceof JsRTT) {
          return "rtt";
      };
      if (v instanceof JsReadback) {
          return "readback";
      };
      if (v instanceof JsRepeat) {
          return "repeat";
      };
      if (v instanceof JsResample) {
          return "resample";
      };
      if (v instanceof JsResolve) {
          return "resolve";
      };
      if (v instanceof JsRetext) {
          return "retext";
      };
      if (v instanceof JsReveal) {
          return "reveal";
      };
      if (v instanceof JsRoot) {
          return "root";
      };
      if (v instanceof JsScale) {
          return "scale";
      };
      if (v instanceof JsShader) {
          return "shader";
      };
      if (v instanceof JsSlice) {
          return "slice";
      };
      if (v instanceof JsSlide) {
          return "slide";
      };
      if (v instanceof JsSource) {
          return "source";
      };
      if (v instanceof JsSpherical) {
          return "spherical";
      };
      if (v instanceof JsSplit) {
          return "split";
      };
      if (v instanceof JsSpread) {
          return "spread";
      };
      if (v instanceof JsStep) {
          return "step";
      };
      if (v instanceof JsStereographic) {
          return "stereographic";
      };
      if (v instanceof JsStereographic4) {
          return "stereographic4";
      };
      if (v instanceof JsStrip) {
          return "strip";
      };
      if (v instanceof JsSubdivide) {
          return "subdivide";
      };
      if (v instanceof JsSurface) {
          return "surface";
      };
      if (v instanceof JsSwizzle) {
          return "swizzle";
      };
      if (v instanceof JsText) {
          return "text";
      };
      if (v instanceof JsTicks) {
          return "ticks";
      };
      if (v instanceof JsTrack) {
          return "track";
      };
      if (v instanceof JsTransform) {
          return "transform";
      };
      if (v instanceof JsTransform3) {
          return "transform";
      };
      if (v instanceof JsTransform4) {
          return "transform4";
      };
      if (v instanceof JsTransition) {
          return "transition";
      };
      if (v instanceof JsTranspose) {
          return "transpose";
      };
      if (v instanceof JsUnit) {
          return "unit";
      };
      if (v instanceof JsVector) {
          return "vector";
      };
      if (v instanceof JsVertex) {
          return "vertex";
      };
      if (v instanceof JsView) {
          return "view";
      };
      if (v instanceof JsVolume) {
          return "volume";
      };
      if (v instanceof JsVoxel) {
          return "voxel";
      };
      throw new Error("Failed pattern match at Mathbox.Mathbox line 220, column 1 - line 220, column 40: " + [ v.constructor.name ]);
  };
  var endD = function (d) {
      return function (m) {
          var $187 = isLeaf(d);
          if ($187) {
              return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(m);
          };
          return $foreign.jsEnd(m);
      };
  };
  var colorWhite = unsafeMkThreeColor("white");
  var addAll = function (v) {
      return function (m) {
          if (v instanceof Data_List_Types.Nil) {
              return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(m);
          };
          if (v instanceof Data_List_Types.Cons) {
              return Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Bind.bind(Control_Monad_Eff.bindEff)(add(v.value0)(m))(endD(v.value0)))(addAll(v.value1));
          };
          throw new Error("Failed pattern match at Mathbox.Mathbox line 29, column 1 - line 29, column 100: " + [ v.constructor.name, m.constructor.name ]);
      };
  };
  var add = function (d) {
      return function (m) {
          return Control_Bind.bind(Control_Monad_Eff.bindEff)($foreign.jsAdd(m)(getType(d))(d)(Mathbox_Field.constrName))(addAll(subData(d)));
      };
  };
  exports["JsArea"] = JsArea;
  exports["JsArray_"] = JsArray_;
  exports["JsAxis"] = JsAxis;
  exports["JsBuffer"] = JsBuffer;
  exports["JsCamera"] = JsCamera;
  exports["JsCartesian"] = JsCartesian;
  exports["JsCartesian4"] = JsCartesian4;
  exports["JsClamp"] = JsClamp;
  exports["JsClock"] = JsClock;
  exports["JsCompose"] = JsCompose;
  exports["JsDOM"] = JsDOM;
  exports["JsData"] = JsData;
  exports["JsFace"] = JsFace;
  exports["JsFormat"] = JsFormat;
  exports["JsFragment"] = JsFragment;
  exports["JsGrid"] = JsGrid;
  exports["JsGroup"] = JsGroup;
  exports["JsGrow"] = JsGrow;
  exports["JsHTML"] = JsHTML;
  exports["JsInherit"] = JsInherit;
  exports["JsInterval"] = JsInterval;
  exports["JsJoin"] = JsJoin;
  exports["JsLabel"] = JsLabel;
  exports["JsLayer"] = JsLayer;
  exports["JsLerp"] = JsLerp;
  exports["JsLine"] = JsLine;
  exports["JsMask"] = JsMask;
  exports["JsMatrix"] = JsMatrix;
  exports["JsMemo"] = JsMemo;
  exports["JsMove"] = JsMove;
  exports["JsNow"] = JsNow;
  exports["JsOperator"] = JsOperator;
  exports["JsParent"] = JsParent;
  exports["JsPlay"] = JsPlay;
  exports["JsPoint"] = JsPoint;
  exports["JsPolar"] = JsPolar;
  exports["JsPresent"] = JsPresent;
  exports["JsRTT"] = JsRTT;
  exports["JsReadback"] = JsReadback;
  exports["JsRepeat"] = JsRepeat;
  exports["JsResample"] = JsResample;
  exports["JsResolve"] = JsResolve;
  exports["JsRetext"] = JsRetext;
  exports["JsReveal"] = JsReveal;
  exports["JsRoot"] = JsRoot;
  exports["JsScale"] = JsScale;
  exports["JsShader"] = JsShader;
  exports["JsSlice"] = JsSlice;
  exports["JsSlide"] = JsSlide;
  exports["JsSource"] = JsSource;
  exports["JsSpherical"] = JsSpherical;
  exports["JsSplit"] = JsSplit;
  exports["JsSpread"] = JsSpread;
  exports["JsStep"] = JsStep;
  exports["JsStereographic"] = JsStereographic;
  exports["JsStereographic4"] = JsStereographic4;
  exports["JsStrip"] = JsStrip;
  exports["JsSubdivide"] = JsSubdivide;
  exports["JsSurface"] = JsSurface;
  exports["JsSwizzle"] = JsSwizzle;
  exports["JsText"] = JsText;
  exports["JsTicks"] = JsTicks;
  exports["JsTrack"] = JsTrack;
  exports["JsTransform"] = JsTransform;
  exports["JsTransform3"] = JsTransform3;
  exports["JsTransform4"] = JsTransform4;
  exports["JsTransition"] = JsTransition;
  exports["JsTranspose"] = JsTranspose;
  exports["JsUnit"] = JsUnit;
  exports["JsVector"] = JsVector;
  exports["JsVertex"] = JsVertex;
  exports["JsView"] = JsView;
  exports["JsVolume"] = JsVolume;
  exports["JsVoxel"] = JsVoxel;
  exports["Area"] = Area;
  exports["Array_"] = Array_;
  exports["Axis"] = Axis;
  exports["Buffer"] = Buffer;
  exports["Camera"] = Camera;
  exports["Cartesian"] = Cartesian;
  exports["Cartesian4"] = Cartesian4;
  exports["Clamp"] = Clamp;
  exports["Clock"] = Clock;
  exports["Compose"] = Compose;
  exports["DOM"] = DOM;
  exports["Data"] = Data;
  exports["Face"] = Face;
  exports["Format"] = Format;
  exports["Fragment"] = Fragment;
  exports["Grid"] = Grid;
  exports["Group"] = Group;
  exports["Grow"] = Grow;
  exports["HTML"] = HTML;
  exports["Inherit"] = Inherit;
  exports["Interval"] = Interval;
  exports["Join"] = Join;
  exports["Label"] = Label;
  exports["Layer"] = Layer;
  exports["Lerp"] = Lerp;
  exports["Line"] = Line;
  exports["Mask"] = Mask;
  exports["Matrix"] = Matrix;
  exports["Memo"] = Memo;
  exports["Move"] = Move;
  exports["Now"] = Now;
  exports["Operator"] = Operator;
  exports["Parent"] = Parent;
  exports["Play"] = Play;
  exports["Point"] = Point;
  exports["Polar"] = Polar;
  exports["Present"] = Present;
  exports["RTT"] = RTT;
  exports["Readback"] = Readback;
  exports["Repeat"] = Repeat;
  exports["Resample"] = Resample;
  exports["Resolve"] = Resolve;
  exports["Retext"] = Retext;
  exports["Reveal"] = Reveal;
  exports["Root"] = Root;
  exports["Scale"] = Scale;
  exports["Shader"] = Shader;
  exports["Slice"] = Slice;
  exports["Slide"] = Slide;
  exports["Source"] = Source;
  exports["Spherical"] = Spherical;
  exports["Split"] = Split;
  exports["Spread"] = Spread;
  exports["Step"] = Step;
  exports["Stereographic"] = Stereographic;
  exports["Stereographic4"] = Stereographic4;
  exports["Strip"] = Strip;
  exports["Subdivide"] = Subdivide;
  exports["Surface"] = Surface;
  exports["Swizzle"] = Swizzle;
  exports["Text"] = Text;
  exports["Ticks"] = Ticks;
  exports["Track"] = Track;
  exports["Transform"] = Transform;
  exports["Transform3"] = Transform3;
  exports["Transform4"] = Transform4;
  exports["Transition"] = Transition;
  exports["Transpose"] = Transpose;
  exports["Unit"] = Unit;
  exports["Vector"] = Vector;
  exports["Vertex"] = Vertex;
  exports["View"] = View;
  exports["Volume"] = Volume;
  exports["Voxel"] = Voxel;
  exports["add"] = add;
  exports["addAll"] = addAll;
  exports["colorWhite"] = colorWhite;
  exports["endD"] = endD;
  exports["getType"] = getType;
  exports["isLeaf"] = isLeaf;
  exports["set"] = set;
  exports["setToNullable"] = setToNullable;
  exports["subData"] = subData;
  exports["toJs"] = toJs;
  exports["unsafeMkThreeColor"] = unsafeMkThreeColor;
  exports["applyOnThree"] = $foreign.applyOnThree;
  exports["mkMathbox"] = $foreign.mkMathbox;
  exports["setThreeClearColor"] = $foreign.setThreeClearColor;
  exports["trackballControls"] = $foreign.trackballControls;
})(PS["Mathbox.Mathbox"] = PS["Mathbox.Mathbox"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_List = PS["Data.List"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ring = PS["Data.Ring"];
  var $$Math = PS["Math"];
  var Mathbox_Class_Camera_Camera = PS["Mathbox.Class.Camera.Camera"];
  var Mathbox_Class_Draw_Axis = PS["Mathbox.Class.Draw.Axis"];
  var Mathbox_Class_Draw_Grid = PS["Mathbox.Class.Draw.Grid"];
  var Mathbox_Class_View_Cartesian = PS["Mathbox.Class.View.Cartesian"];
  var Mathbox_Classes = PS["Mathbox.Classes"];
  var Mathbox_Field = PS["Mathbox.Field"];
  var Mathbox_Mathbox = PS["Mathbox.Mathbox"];
  var Mathbox_Types = PS["Mathbox.Types"];
  var Prelude = PS["Prelude"];        
  var gridWidth = new Mathbox_Field.Val(2.0);
  var camPos = Mathbox_Field.Val.create(Mathbox_Types.mkVec3(0)(0)(4));
  var axisWidth = new Mathbox_Field.Val(4.0);
  var mathbox = new Data_List_Types.Cons(Mathbox_Mathbox.Camera.create((function () {
      var $5 = {};
      for (var $6 in Mathbox_Class_Camera_Camera.mkCamera) {
          if ({}.hasOwnProperty.call(Mathbox_Class_Camera_Camera.mkCamera, $6)) {
              $5[$6] = Mathbox_Class_Camera_Camera["mkCamera"][$6];
          };
      };
      $5.proxy = new Mathbox_Field.Val(true);
      $5.position = new Data_Maybe.Just(camPos);
      return $5;
  })()), new Data_List_Types.Cons(Mathbox_Mathbox.Cartesian.create((function () {
      var $8 = {};
      for (var $9 in Mathbox_Class_View_Cartesian.mkCartesian) {
          if ({}.hasOwnProperty.call(Mathbox_Class_View_Cartesian.mkCartesian, $9)) {
              $8[$9] = Mathbox_Class_View_Cartesian["mkCartesian"][$9];
          };
      };
      $8.range = new Mathbox_Field.Val([ Mathbox_Types.mkVec2(-2 | 0)(2), Mathbox_Types.mkVec2(-1 | 0)(1), Mathbox_Types.mkVec2(-1 | 0)(1) ]);
      $8.scale = new Mathbox_Field.Val(Mathbox_Types.mkVec3(2)(1)(1));
      return $8;
  })())(new Data_List_Types.Cons(Mathbox_Mathbox.Axis.create((function () {
      var $11 = {};
      for (var $12 in Mathbox_Class_Draw_Axis.mkAxis) {
          if ({}.hasOwnProperty.call(Mathbox_Class_Draw_Axis.mkAxis, $12)) {
              $11[$12] = Mathbox_Class_Draw_Axis["mkAxis"][$12];
          };
      };
      $11.width = axisWidth;
      return $11;
  })()), new Data_List_Types.Cons(Mathbox_Mathbox.Axis.create((function () {
      var $14 = {};
      for (var $15 in Mathbox_Class_Draw_Axis.mkAxis) {
          if ({}.hasOwnProperty.call(Mathbox_Class_Draw_Axis.mkAxis, $15)) {
              $14[$15] = Mathbox_Class_Draw_Axis["mkAxis"][$15];
          };
      };
      $14.width = axisWidth;
      $14.axis = new Mathbox_Field.Val(Mathbox_Types.axis2);
      return $14;
  })()), new Data_List_Types.Cons(Mathbox_Mathbox.Grid.create((function () {
      var $17 = {};
      for (var $18 in Mathbox_Class_Draw_Grid.mkGrid) {
          if ({}.hasOwnProperty.call(Mathbox_Class_Draw_Grid.mkGrid, $18)) {
              $17[$18] = Mathbox_Class_Draw_Grid["mkGrid"][$18];
          };
      };
      $17.width = gridWidth;
      $17.divideX = new Mathbox_Field.Val(20.0);
      $17.divideY = new Mathbox_Field.Val(10.0);
      return $17;
  })()), Data_List_Types.Nil.value)))), Data_List_Types.Nil.value));
  var main = Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Bind.bind(Control_Monad_Eff.bindEff)(Mathbox_Mathbox.mkMathbox({
      plugins: [ "core", "controls", "cursor" ], 
      controls: {
          klass: Mathbox_Mathbox.trackballControls
      }, 
      fullscreen: true
  }))(Mathbox_Mathbox.applyOnThree(Mathbox_Mathbox.setThreeClearColor(Mathbox_Mathbox.colorWhite)(1.0))))(Mathbox_Mathbox.set({
      focus: new Data_Maybe.Just(3.0), 
      scale: new Data_Maybe.Just(720.0)
  })))(Mathbox_Mathbox.addAll(Data_Functor.map(Data_List_Types.functorList)(Mathbox_Mathbox.toJs)(mathbox)));
  exports["axisWidth"] = axisWidth;
  exports["camPos"] = camPos;
  exports["gridWidth"] = gridWidth;
  exports["main"] = main;
  exports["mathbox"] = mathbox;
})(PS["Main"] = PS["Main"] || {});
PS["Main"].main();
